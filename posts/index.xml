<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>归档 on Askyx's Blog</title><link>https://askyx.github.io/posts/</link><description>Recent content in 归档 on Askyx's Blog</description><generator>Hugo</generator><language>zh-Hans</language><atom:link href="https://askyx.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Wsl 常见问题记录</title><link>https://askyx.github.io/posts/note/wsl/</link><pubDate>Tue, 03 Sep 2024 10:40:40 +0800</pubDate><guid>https://askyx.github.io/posts/note/wsl/</guid><description>&lt;h2 id="1-wsl-内核版本升级">1. WSL 内核版本升级&lt;/h2>
&lt;p>&lt;a href="https://learn.microsoft.com/en-us/community/content/wsl-user-msft-kernel-v6" target="_blank">https://learn.microsoft.com/en-us/community/content/wsl-user-msft-kernel-v6&lt;/a>

&lt;a href="https://blog.yurzi.net/posts/a-try-to-upgrade-wsl-kernel/#cite-3" target="_blank">https://blog.yurzi.net/posts/a-try-to-upgrade-wsl-kernel/#cite-3&lt;/a>

&lt;a href="https://zhuanlan.zhihu.com/p/18715471543" target="_blank">https://zhuanlan.zhihu.com/p/18715471543&lt;/a>
&lt;/p>
&lt;p>这里可以直接升级内核，然后功能全开，perf 自然也可以直接使用，当然也可以针对当前版本，编译 perf 安装&lt;/p>
&lt;ol>
&lt;li>确定内核版本&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>❯ uname -a
Linux Esoye 5.15.153.1-microsoft-standard-WSL2 #1 SMP Fri Mar 29 23:14:13 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>下载对应内核源码，可以直接 clone，也可以直接下载源码包&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>git clone https://github.com/microsoft/WSL2-Linux-Kernel.git --depth=1 -b linux-msft-wsl-6.6.y
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>安装依赖，否则编译的 perf 功能不全，也可以自己研究具体需要那些功能&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sudo apt install &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>binutils-dev debuginfod libbabeltrace-dev libcap-dev &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>libdw-dev libdwarf-dev libelf-dev liblzma-dev libnuma-dev libperl-dev cpio dwarves &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span>libslang2-dev libssl-dev libtraceevent-dev libunwind-dev libzstd-dev libzstd1 python3-dev systemtap-sdt-dev zlib1g-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-- 可以按下面提示安装对应版本的依赖
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Makefile.config:423: No libelf found. Disables &lt;span style="color:#e6db74">&amp;#39;probe&amp;#39;&lt;/span> tool, jvmti and BPF support in &lt;span style="color:#e6db74">&amp;#39;perf record&amp;#39;&lt;/span>. Please install libelf-dev, libelf-devel or elfutils-libelf-devel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Makefile.config:596: No sys/sdt.h found, no SDT events are defined, please install systemtap-sdt-devel or systemtap-sdt-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Makefile.config:680: Disabling post unwind, no support found.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Makefile.config:746: No libcrypto.h found, disables jitted code injection, please install openssl-devel or libssl-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Makefile.config:762: slang not found, disables TUI support. Please install slang-devel, libslang-dev or libslang2-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Makefile.config:809: Missing perl devel files. Disabling perl scripting support, please install perl-ExtUtils-Embed/libperl-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Makefile.config:891: Old version of libbfd/binutils things like PE executable profiling will not be available
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Makefile.config:940: No liblzma found, disables xz kernel module decompression, please install xz-devel/liblzma-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Makefile.config:953: No libzstd found, disables trace compression, please install libzstd-dev&lt;span style="color:#f92672">[&lt;/span>el&lt;span style="color:#f92672">]&lt;/span> and/or set LIBZSTD_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Makefile.config:964: No libcap found, disables capability support, please install libcap-devel/libcap-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Makefile.config:977: No numa.h found, disables &lt;span style="color:#e6db74">&amp;#39;perf bench numa mem&amp;#39;&lt;/span> benchmark, please install numactl-devel/libnuma-devel/libnuma-dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Makefile.config:1036: No libbabeltrace found, disables &lt;span style="color:#e6db74">&amp;#39;perf data&amp;#39;&lt;/span> CTF format support, please install libbabeltrace-dev&lt;span style="color:#f92672">[&lt;/span>el&lt;span style="color:#f92672">]&lt;/span>/libbabeltrace-ctf-dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>编译 perf&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>cd WSL2-Linux-Kernel-linux-msft-wsl-5.15.153.1/tools/perf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>或者
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make -j&lt;span style="color:#66d9ef">$(&lt;/span>nproc&lt;span style="color:#66d9ef">)&lt;/span> KCONFIG_CONFIG&lt;span style="color:#f92672">=&lt;/span>myconf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="5">
&lt;li>如果是 perf &lt;code>sudo cp perf /usr/bin&lt;/code> 验证&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>❯ perf -v
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>perf version 5.15.153.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="6">
&lt;li>安装内核&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>&lt;/code>&lt;/pre>&lt;h2 id="2-zsk-powerlevel10k">2. zsk powerlevel10k&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>sh -c &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>curl -fsSL https://gitee.com/shmhlsy/oh-my-zsh-install.sh/raw/master/install.sh&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone --depth&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> https://gitee.com/fkamrk/zsh-autosuggestions.git $ZSH_CUSTOM/plugins/zsh-autosuggestions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone --depth&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> https://gitee.com/romkatv/powerlevel10k.git &lt;span style="color:#e6db74">${&lt;/span>ZSH_CUSTOM&lt;span style="color:#66d9ef">:-&lt;/span>$HOME/.oh-my-zsh/custom&lt;span style="color:#e6db74">}&lt;/span>/themes/powerlevel10k
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ZSH_THEME&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;powerlevel10k/powerlevel10k&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>p10k configure
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="3-docker">3. docker&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo apt install docker.io
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Got permission denied &lt;span style="color:#66d9ef">while&lt;/span> trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get &lt;span style="color:#e6db74">&amp;#34;http://%2Fvar%2Frun%2Fdocker.sock/v1.39/containers/json&amp;#34;&lt;/span>: dial unix /var/run/docker.sock: connect: permission denied
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo groupadd docker &lt;span style="color:#75715e">#添加docker用户组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo gpasswd -a $USER docker &lt;span style="color:#75715e">#将当前用户添加到docker用户组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>newgrp docker &lt;span style="color:#75715e">#更新docker用户组&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-- 可能可用的镜像，一个一个试
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull registry.docker-cn.com/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull hub-mirror.c.163.com/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull docker.mirrors.ustc.edu.cn/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull yxzrazem.mirror.aliyuncs.com/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull docker.kubesre.xyz/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull dc.j8.work/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull docker.registry.cyou/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull docker.hlyun.org/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull docker.chenby.cn/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull docker.jsdelivr.fyi/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull docker-mirrors.mjjman.com/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull huecker.io/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull dockerhub.timeweb.cloud/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull docker-cf.registry.cyou/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull dockercf.jsdelivr.fyi/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull dockertest.jsdelivr.fyi/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull dockerhub.azk8s.cn/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull mirror.ccs.tencentyun.com/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull registry.cn-hangzhou.aliyuncs.com/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker pull docker.m.daocloud.io/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker tag 8a3cdc4d1ad3 ubuntu:24.04
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker rmi docker.jsdelivr.fyi/library/ubuntu:24.04
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="wsl-磁盘空间释放">WSL 磁盘空间释放&lt;/h2>
&lt;p>这是记录wsl运行中的异常文件&lt;/p></description></item><item><title>orca 简记</title><link>https://askyx.github.io/posts/database/gp/orca/</link><pubDate>Thu, 13 Jun 2024 11:07:23 +0800</pubDate><guid>https://askyx.github.io/posts/database/gp/orca/</guid><description>&lt;ol>
&lt;li>
&lt;p>框架&lt;/p>
&lt;/li>
&lt;li>
&lt;p>与外部交互使用的是 dxl
* 内部预置大量的序列化的文件，包含元数据信息，测试文件等
* 集成到 gp 的时候，Query 结构体使用 CTranslatorQueryToDXL 转换&lt;/p>
&lt;/li>
&lt;li>
&lt;p>后续由 CTranslatorDXLToExpr 转换为 CExpression
* 优化核心就是 处理 CExpression
* CExpression 当前不仅仅只是 logicalNode 和 physicalNode，普通得表达式也是 CExpression ，都会使用一个 Group 保存， 这会导致 Group 暴增， 普通表达式在后续优化得时候是不怎么需要处理得&lt;/p></description></item><item><title>Postgres Hash Join</title><link>https://askyx.github.io/posts/postgres/hashjoin/</link><pubDate>Fri, 08 Mar 2024 09:01:31 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/hashjoin/</guid><description>&lt;h2 id="理论依据">理论依据&lt;/h2>
&lt;p>使用 &lt;code>hybrid hash join&lt;/code> 实现的hash join，大意是：&lt;br>
outer 和 inner 无法完全使用内存实现 hash join，所以需要把数据分区 dump 到磁盘中，每个分区称为一个 batch，在
优化阶段，会使用已有的统计信息决定分区大小，但是实际执行中， 如果有偏差，则分区按2倍扩容，分区运行时不会减少&lt;/p></description></item><item><title>源码编译 OpenTenBase 速通版</title><link>https://askyx.github.io/posts/database/tbase/build/</link><pubDate>Fri, 05 Jan 2024 11:07:23 +0800</pubDate><guid>https://askyx.github.io/posts/database/tbase/build/</guid><description>&lt;h2 id="shell">shell&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone --depth&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> https://hub.fgit.cf/OpenTenBase/OpenTenBase.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run -itd --name tbase --cap-add&lt;span style="color:#f92672">=&lt;/span>SYS_PTRACE --privileged&lt;span style="color:#f92672">=&lt;/span>true --hostname vscode --mount type&lt;span style="color:#f92672">=&lt;/span>bind,source&lt;span style="color:#f92672">=&lt;/span>/home/wen/OpenTenBase,target&lt;span style="color:#f92672">=&lt;/span>/workspaces/OpenTenBase runner bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker exec -it -u vscode tbase bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo service ssh start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh-keygen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#ae81ff">700&lt;/span> ~/.ssh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#ae81ff">644&lt;/span> ~/.ssh/authorized_keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown vscode:vscode -R /workspaces/OpenTenBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p .build/making
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir .data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd .build/making
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/workspaces/OpenTenBase/configure --prefix&lt;span style="color:#f92672">=&lt;/span>/home/vscode/.build --enable-user-switch --with-openssl --with-ossp-uuid --enable-alltype-distri CFLAGS&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-fgnu89-inline -g -O0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make -j64 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make install &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd contrib &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make -j64 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make install 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ~
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir pgxc_ctl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 写入下面的模板&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch pgxc_ctl/pg.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ssh localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pgxc_ctl -c pg.conf init all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>createdb -p &lt;span style="color:#ae81ff">6011&lt;/span> vscode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># .bashrc 文件 此外，/home/vscode/.build/bin 需要写入到 /etc/environment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &amp;gt; /home/vscode/.bashrc &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">export PATH=&amp;#34;$PATH:/home/vscode/.build/bin&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">export LD_LIBRARY_PATH=&amp;#34;$LD_LIBRARY_PATH:/home/vscode/.build/lib&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">export LC_ALL=C
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">alias psql=&amp;#39;psql -p 6011&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">alias pstart=&amp;#39;pgxc_ctl -c pg.conf start all&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">alias pstop=&amp;#39;pgxc_ctl -c pg.conf stop all&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">alias sqps=&amp;#34;echo &amp;#39;USER PID PPID VSZ CMD&amp;#39; ; ps -eo user,pid,ppid,vsize,cmd | grep -E &amp;#39;postgres&amp;#39; &amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conf-file-pgconf">conf file (pg.conf)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>pgxcInstallDir&lt;span style="color:#f92672">=&lt;/span>/home/vscode/.build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pgxcOwner&lt;span style="color:#f92672">=&lt;/span>vscode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pgxcUser&lt;span style="color:#f92672">=&lt;/span>$pgxcOwner
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>defaultDatabase&lt;span style="color:#f92672">=&lt;/span>postgres
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpDir&lt;span style="color:#f92672">=&lt;/span>/tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localTmpDir&lt;span style="color:#f92672">=&lt;/span>$tmpDir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#------------------------ GTM ---------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmName&lt;span style="color:#f92672">=&lt;/span>gtm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmMasterServer&lt;span style="color:#f92672">=&lt;/span>vscode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmMasterPort&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">6006&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmMasterDir&lt;span style="color:#f92672">=&lt;/span>/home/vscode/.data/gtm_master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmExtraConfig&lt;span style="color:#f92672">=&lt;/span>none
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmMasterSpecificExtraConfig&lt;span style="color:#f92672">=&lt;/span>none
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmSlave&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#------------------------ Coordinators ---------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordNames&lt;span style="color:#f92672">=(&lt;/span>cn001 cn002&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordMasterCluster&lt;span style="color:#f92672">=(&lt;/span>vscode_cluster vscode_cluster&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordPorts&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#ae81ff">6011&lt;/span> 6012&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>poolerPorts&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#ae81ff">6111&lt;/span> 6112&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordPgHbaEntries&lt;span style="color:#f92672">=(&lt;/span>0.0.0.0/0&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordMasterServers&lt;span style="color:#f92672">=(&lt;/span>vscode vscode&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordMasterDirs&lt;span style="color:#f92672">=(&lt;/span>/home/vscode/.data/cn001 /home/vscode/.data/cn002&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordMaxWALSenders&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span> 10&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordSlave&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordSlaveSync&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordArchLogDirs&lt;span style="color:#f92672">=(&lt;/span>/home/vscode/.data/archlog/cn001 /home/vscode/.data/archlog/cn002&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordExtraConfig&lt;span style="color:#f92672">=&lt;/span>coordExtraConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &amp;gt; $coordExtraConfig &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">#================================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Added to all the coordinator postgresql.conf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Original: $coordExtraConfig
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">include_if_exists = &amp;#39;/home/vscode/.data/global/global_vscode.conf&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_level = replica
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_keep_segments = 256
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">max_wal_senders = 4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">archive_mode = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">archive_timeout = 1800
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">archive_command = &amp;#39;echo 0&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_truncate_on_rotation = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_filename = &amp;#39;postgresql-%M.log&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_rotation_age = 4h
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_rotation_size = 100MB
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">hot_standby = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_sender_timeout = 30min
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_receiver_timeout = 30min
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">shared_buffers = 16384MB
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">max_pool_size = 2000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_statement = &amp;#39;ddl&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_destination = &amp;#39;csvlog&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">logging_collector = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_directory = &amp;#39;pg_log&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">listen_addresses = &amp;#39;*&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">max_connections = 2000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordSpecificExtraConfig&lt;span style="color:#f92672">=(&lt;/span>none none&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordExtraPgHba&lt;span style="color:#f92672">=&lt;/span>coordExtraPgHba
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &amp;gt; $coordExtraPgHba &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">local all all trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host all all 0.0.0.0/0 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host replication all 0.0.0.0/0 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host all all ::1/128 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host replication all ::1/128 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordSpecificExtraPgHba&lt;span style="color:#f92672">=(&lt;/span>none none&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordAdditionalSlaves&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cad1_Sync&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#------------------------ Datanodes ---------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>primaryDatanode&lt;span style="color:#f92672">=&lt;/span>dn001
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeNames&lt;span style="color:#f92672">=(&lt;/span>dn001 dn002 dn003&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodePorts&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#ae81ff">6021&lt;/span> &lt;span style="color:#ae81ff">6022&lt;/span> 6023&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodePoolerPorts&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#ae81ff">6121&lt;/span> &lt;span style="color:#ae81ff">6122&lt;/span> 6123&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeMasterCluster&lt;span style="color:#f92672">=(&lt;/span>vscode_cluster vscode_cluster vscode_cluster&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodePgHbaEntries&lt;span style="color:#f92672">=(&lt;/span>0.0.0.0/0&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeMasterServers&lt;span style="color:#f92672">=(&lt;/span>vscode vscode vscode&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeMasterDirs&lt;span style="color:#f92672">=(&lt;/span>/home/vscode/.data/dn001 /home/vscode/.data/dn002 /home/vscode/.data/dn003&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeMaxWALSenders&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> 10&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeArchLogDirs&lt;span style="color:#f92672">=(&lt;/span>/home/vscode/.data/archlog/dn001 /home/vscode/.data/archlog/dn002 /home/vscode/.data/archlog/dn003&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeSlave&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeExtraConfig&lt;span style="color:#f92672">=&lt;/span>datanodeExtraConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &amp;gt; $datanodeExtraConfig &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">#================================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Added to all the coordinator postgresql.conf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Original: $datanodeExtraConfig
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">include_if_exists = &amp;#39;/home/vscode/.data/global/global_vscode.conf&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">listen_addresses = &amp;#39;*&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_level = replica
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_keep_segments = 256
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">max_wal_senders = 4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">archive_mode = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">archive_timeout = 1800
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">archive_command = &amp;#39;echo 0&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_directory = &amp;#39;pg_log&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">logging_collector = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_truncate_on_rotation = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_filename = &amp;#39;postgresql-%M.log&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_rotation_age = 4h
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_rotation_size = 100MB
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">hot_standby = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_sender_timeout = 30min
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_receiver_timeout = 30min
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">shared_buffers = 16384MB
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">max_connections = 4000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">max_pool_size = 4000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_statement = &amp;#39;ddl&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_destination = &amp;#39;csvlog&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_buffers = 1GB
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeSpecificExtraConfig&lt;span style="color:#f92672">=(&lt;/span>none none&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeExtraPgHba&lt;span style="color:#f92672">=&lt;/span>datanodeExtraPgHba
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &amp;gt; $datanodeExtraPgHba &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">local all all trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host all all 0.0.0.0/0 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host replication all 0.0.0.0/0 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host all all ::1/128 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host replication all ::1/128 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeSpecificExtraPgHba&lt;span style="color:#f92672">=(&lt;/span>none none&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeAdditionalSlaves&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>walArchive&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="demo-sql">demo sql&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">drop table if exists t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">drop table if exists t0_2357_hash; drop table if exists t1_2357_hash; drop table if exists t2_2357_hash;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">drop table if exists t0_2357_mod; drop table if exists t1_2357_mod; drop table if exists t2_2357_mod;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">drop table if exists t0_2357_repl; drop table if exists t1_2357_repl; drop table if exists t2_2357_repl;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">drop table if exists t0_2357_round; drop table if exists t1_2357_round; drop table if exists t2_2357_round;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">drop table if exists t0_2357_random; drop table if exists t1_2357_random; drop table if exists t2_2357_random;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> droptable &lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>gset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t0(a int, b int, c char(10), d timestamp);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t0 values
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">(1, 1, &amp;#39;&amp;#39;1&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2021-12-29 20:10:01&amp;#39;&amp;#39;),(2, 2, &amp;#39;&amp;#39;2&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2022-12-29 20:10:01&amp;#39;&amp;#39;),(3, 3, &amp;#39;&amp;#39;3&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2023-12-29 20:10:01&amp;#39;&amp;#39;),(4, 4, &amp;#39;&amp;#39;4&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2024-12-29 20:10:01&amp;#39;&amp;#39;),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">(5, 5, &amp;#39;&amp;#39;5&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2025-12-29 20:10:01&amp;#39;&amp;#39;),(6, 6, &amp;#39;&amp;#39;6&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2026-12-29 20:10:01&amp;#39;&amp;#39;),(7, 7, &amp;#39;&amp;#39;7&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2027-12-29 20:10:01&amp;#39;&amp;#39;),(8, 8, &amp;#39;&amp;#39;8&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2028-12-29 20:10:01&amp;#39;&amp;#39;),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">(9, 9, &amp;#39;&amp;#39;9&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2029-12-29 20:10:01&amp;#39;&amp;#39;),(10, 10, &amp;#39;&amp;#39;10&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2010-12-29 20:10:01&amp;#39;&amp;#39;),(11, 11, &amp;#39;&amp;#39;11&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2011-12-29 20:10:01&amp;#39;&amp;#39;),(12, 12, &amp;#39;&amp;#39;12&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2012-12-29 20:10:01&amp;#39;&amp;#39;),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">(13, 13, &amp;#39;&amp;#39;13&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2013-12-29 20:10:01&amp;#39;&amp;#39;),(14, 14, &amp;#39;&amp;#39;14&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2014-12-29 20:10:01&amp;#39;&amp;#39;),(15, 15, &amp;#39;&amp;#39;15&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2015-12-29 20:10:01&amp;#39;&amp;#39;),(16, 16, &amp;#39;&amp;#39;16&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2016-12-29 20:10:01&amp;#39;&amp;#39;),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">(17, 17, &amp;#39;&amp;#39;17&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2017-12-29 20:10:01&amp;#39;&amp;#39;),(18, 18, &amp;#39;&amp;#39;18&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2018-12-29 20:10:01&amp;#39;&amp;#39;),(19, 19, &amp;#39;&amp;#39;19&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2019-12-29 20:10:01&amp;#39;&amp;#39;),(20, 20, &amp;#39;&amp;#39;20&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2020-12-29 20:10:01&amp;#39;&amp;#39;);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t0_2357_hash (a int, b int, c char(10), d timestamp) DISTRIBUTE by hash (a);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t0_2357_mod (a int, b int, c char(10), d timestamp) DISTRIBUTE by modulo(a);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t0_2357_repl (a int, b int, c char(10), d timestamp) DISTRIBUTE by REPLICATION;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t0_2357_round (a int, b int, c char(10), d timestamp) DISTRIBUTE by roundrobin;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t0_2357_random (a int, b int, c char(10), d timestamp) DISTRIBUTED RANDOMLY;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t1_2357_hash (a int, b int, c char(10), d timestamp) DISTRIBUTE by hash (a);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t1_2357_mod (a int, b int, c char(10), d timestamp) DISTRIBUTE by modulo(a);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t1_2357_repl (a int, b int, c char(10), d timestamp) DISTRIBUTE by REPLICATION;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t1_2357_round (a int, b int, c char(10), d timestamp) DISTRIBUTE by roundrobin;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t1_2357_random (a int, b int, c char(10), d timestamp) DISTRIBUTED RANDOMLY;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t2_2357_hash (a int, b int, c char(10), d timestamp) DISTRIBUTE by hash (a);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t2_2357_mod (a int, b int, c char(10), d timestamp) DISTRIBUTE by modulo(a);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t2_2357_repl (a int, b int, c char(10), d timestamp) DISTRIBUTE by REPLICATION;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t2_2357_round (a int, b int, c char(10), d timestamp) DISTRIBUTE by roundrobin;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t2_2357_random (a int, b int, c char(10), d timestamp) DISTRIBUTED RANDOMLY;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t0_2357_hash select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t0_2357_mod select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t0_2357_repl select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t0_2357_round select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t0_2357_random select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t1_2357_hash select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t1_2357_mod select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t1_2357_repl select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t1_2357_round select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t1_2357_random select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t2_2357_hash select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t2_2357_mod select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t2_2357_repl select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t2_2357_round select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t2_2357_random select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">vacuum analyze t0_2357_hash; vacuum analyze t1_2357_hash; vacuum analyze t2_2357_hash;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">vacuum analyze t0_2357_mod; vacuum analyze t1_2357_mod; vacuum analyze t2_2357_mod;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">vacuum analyze t0_2357_repl; vacuum analyze t1_2357_repl; vacuum analyze t2_2357_repl;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">vacuum analyze t0_2357_round; vacuum analyze t1_2357_round; vacuum analyze t2_2357_round;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">vacuum analyze t0_2357_random; vacuum analyze t1_2357_random; vacuum analyze t2_2357_random;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> createtable &lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>gset
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>cmake 速查模板</title><link>https://askyx.github.io/posts/others/cmake/</link><pubDate>Wed, 09 Aug 2023 17:34:54 +0800</pubDate><guid>https://askyx.github.io/posts/others/cmake/</guid><description>&lt;h2 id="cmake-速记模板">cmake 速记模板&lt;/h2>
&lt;h3 id="cmake-升级">cmake 升级&lt;/h3>
&lt;pre tabindex="0">&lt;code>https://zhuanlan.zhihu.com/p/513871916

wget https://github.com/Kitware/CMake/releases/download/v3.23.0/cmake-3.23.0-linux-x86_64.sh

sudo bash ./cmake-3.23.0-linux-x86_64.sh --skip-licence --prefix=/usr/local

sudo update-alternatives --install /usr/bin/cmake cmake /usr/local/cmake-4.0.3-linux-x86_64/bin/cmake 10


Do you accept the license? [yn]: 

By default the CMake will be installed in:
 &amp;#34;/usr/cmake-3.23.0-linux-x86_64&amp;#34;
Do you want to include the subdirectory cmake-3.23.0-linux-x86_64?
Saying no will install in: &amp;#34;/usr&amp;#34; [Yn]:
&lt;/code>&lt;/pre>&lt;p>修改 PATH&lt;/p>
&lt;h3 id="添加第三方库">添加第三方库&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>include(FetchContent)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>function(get_third_dep dep_name dep_url dep_tag)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FetchContent_Declare(&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{dep_name}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> QUIET
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SOURCE_DIR &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{CMAKE_BINARY_DIR}&lt;span style="color:#f92672">/&lt;/span>_deps&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{dep_name}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BINARY_DIR &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{CMAKE_BINARY_DIR}&lt;span style="color:#f92672">/&lt;/span>_deps&lt;span style="color:#f92672">/&lt;/span>build&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{dep_name}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SUBBUILD_DIR &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{CMAKE_BINARY_DIR}&lt;span style="color:#f92672">/&lt;/span>_deps&lt;span style="color:#f92672">/&lt;/span>sub&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{dep_name}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GIT_REPOSITORY &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{dep_url}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GIT_TAG &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{dep_tag}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GIT_PROGRESS TRUE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GIT_SHALLOW TRUE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> FetchContent_MakeAvailable(&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{dep_name})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>endfunction(get_third_dep)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>get_third_dep(spdlog https:&lt;span style="color:#75715e">//ghproxy.com/https://github.com/gabime/spdlog.git v1.11.0)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>get_third_dep(googletest https:&lt;span style="color:#75715e">//ghproxy.com/https://github.com/google/googletest.git release-1.12.1)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>get_third_dep(asio https:&lt;span style="color:#75715e">//ghproxy.com/https://github.com/chriskohlhoff/asio.git asio-1-28-0)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 添加 head only 库
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>add_library(asio INTERFACE)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>target_include_directories(asio
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> INTERFACE &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{CMAKE_BINARY_DIR}&lt;span style="color:#f92672">/&lt;/span>_deps&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>asio&lt;span style="color:#f92672">/&lt;/span>asio&lt;span style="color:#f92672">/&lt;/span>include
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>target_compile_definitions(asio
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> INTERFACE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ASIO_STANDALONE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ASIO_NO_DEPRECATED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>target_link_libraries(asio
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> INTERFACE pthread
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加-yacc-lex-编译">添加 yacc lex 编译&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>find_package(FLEX REQUIRED)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>find_package(BISON &lt;span style="color:#ae81ff">3.5.0&lt;/span> REQUIRED)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bison_target(parser
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{PROJECT_SOURCE_DIR}&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>parser&lt;span style="color:#f92672">/&lt;/span>parser.yy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{PROJECT_SOURCE_DIR}&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>parser&lt;span style="color:#f92672">/&lt;/span>parser.cpp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># DEFINES_FILE ${PROJECT_SOURCE_DIR}/src/include/parser/parser.hpp
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> COMPILE_FLAGS &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{bison_flags})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flex_target(scanner
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{PROJECT_SOURCE_DIR}&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>parser&lt;span style="color:#f92672">/&lt;/span>scanner.lex
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{PROJECT_SOURCE_DIR}&lt;span style="color:#f92672">/&lt;/span>src&lt;span style="color:#f92672">/&lt;/span>parser&lt;span style="color:#f92672">/&lt;/span>scanner.cpp)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ADD_FLEX_BISON_DEPENDENCY(scanner parser)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>add_library(ASKY_lib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SHARED
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{ASKY_SRC}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{BISON_parser_OUTPUTS}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{FLEX_scanner_OUTPUTS}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加单元测试">添加单元测试&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>function(add_cosmos_test test_name test_file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add_executable(&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{test_name} &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{test_file})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target_link_libraries(&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{test_name} PRIVATE gtest gtest_main ASKY_lib)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add_test(NAME &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{test_name} COMMAND &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{test_name})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>endfunction(add_cosmos_test)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>foreach(TEST_SOURCE_FILE &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{ASKY_TEST_SRC})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file(RELATIVE_PATH ASKY_TEST_CPP_REL &lt;span style="color:#e6db74">&amp;#34;${PROJECT_SOURCE_DIR}/test&amp;#34;&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{TEST_SOURCE_FILE})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> get_filename_component(NOISEPAGE_TEST_DIR &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{ASKY_TEST_CPP_REL} DIRECTORY)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> get_filename_component(NOISEPAGE_TEST &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{TEST_SOURCE_FILE} NAME_WE)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add_cosmos_test(&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{NOISEPAGE_TEST} &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{TEST_SOURCE_FILE})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>endforeach()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加-自定义-command">添加 自定义 command&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># clang-format
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>add_custom_target(format
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> COMMAND git diff &lt;span style="color:#f92672">--&lt;/span>name&lt;span style="color:#f92672">-&lt;/span>only &lt;span style="color:#f92672">--&lt;/span>diff&lt;span style="color:#f92672">-&lt;/span>filter&lt;span style="color:#f92672">=&lt;/span>d &lt;span style="color:#f92672">--&lt;/span>cached &lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>&lt;span style="color:#f92672">*&lt;/span>.cpp&lt;span style="color:#e6db74">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#f92672">*&lt;/span>.h&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span> &lt;span style="color:#f92672">|&lt;/span> xargs clang&lt;span style="color:#f92672">-&lt;/span>format &lt;span style="color:#f92672">-&lt;/span>i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> WORKING_DIRECTORY &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{PROJECT_SOURCE_DIR}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="cmake-option">cmake option&lt;/h3>
&lt;ul>
&lt;li>&lt;code>option&lt;/code> 会缓存在cache 中，直接修改cmake文件不会立刻生效，可以手动 cmake 使用 &lt;code>-D&lt;/code> 指定
&lt;code>cmake .. -DENABLE_ASAN=OFF&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>option(ENABLE_ASAN &lt;span style="color:#e6db74">&amp;#34;enable asna check&amp;#34;&lt;/span> ON)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>option(ENABLE_TEST &lt;span style="color:#e6db74">&amp;#34;enable regress&amp;#34;&lt;/span> OFF)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>option(ENABLE_COVERAGE &lt;span style="color:#e6db74">&amp;#34;enable coverage&amp;#34;&lt;/span> OFF)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>option(ENABLE_PARSER_TRACE &lt;span style="color:#e6db74">&amp;#34;enable sql parser trace&amp;#34;&lt;/span> ON)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>{ENABLE_ASAN})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list(APPEND COMPILE_OPTIONS &lt;span style="color:#e6db74">&amp;#34;-fsanitize=address&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;-fno-omit-frame-pointer&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;-fno-optimize-sibling-calls&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list(APPEND LINK_OPTIONS &lt;span style="color:#e6db74">&amp;#34;-fsanitize=address&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>endif ()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>message(STATUS &lt;span style="color:#e6db74">&amp;#34;ASAN: ${ENABLE_ASAN}&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="自定义-package-配置">自定义 package 配置&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Copyright 2020 Mats Kindahl&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Licensed under the Apache License, Version 2.0 (the &amp;#34;License&amp;#34;); you may not&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># use this file except in compliance with the License. You may obtain a copy of&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># the License at&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># http://www.apache.org/licenses/LICENSE-2.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Unless required by applicable law or agreed to in writing, software&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># distributed under the License is distributed on an &amp;#34;AS IS&amp;#34; BASIS, WITHOUT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># License for the specific language governing permissions and limitations under&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># the License.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># .rst: FindPostgreSQL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># --------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Find the PostgreSQL installation.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># This module defines the following variables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ::&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PostgreSQL_LIBRARIES - the PostgreSQL libraries needed for linking&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PostgreSQL_INCLUDE_DIRS - include directories&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PostgreSQL_SERVER_INCLUDE_DIRS - include directories for server programming&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PostgreSQL_LIBRARY_DIRS - link directories for PostgreSQL libraries&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PostgreSQL_EXTENSION_DIR - the directory for extensions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PostgreSQL_SHARED_LINK_OPTIONS - options for shared libraries&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PostgreSQL_LINK_OPTIONS - options for static libraries and executables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># PostgreSQL_VERSION_STRING - the version of PostgreSQL found (since CMake&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 2.8.8)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ----------------------------------------------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># History: This module is derived from the existing FindPostgreSQL.cmake and try&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># to use most of the existing output variables of that module, but uses&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># `pg_config` to extract the necessary information instead and add a macro for&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># creating extensions. The use of `pg_config` is aligned with how the PGXS code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># distributed with PostgreSQL itself works.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Define additional search paths for root directories.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_ROOT_DIRECTORIES ENV PGROOT ENV PGPATH &lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_ROOT&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>find_program&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PG_CONFIG pg_config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PATHS &lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_ROOT_DIRECTORIES&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PATH_SUFFIXES bin&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>NOT PG_CONFIG&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>FATAL_ERROR &lt;span style="color:#e6db74">&amp;#34;Could not find pg_config&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_FOUND TRUE&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>message&lt;span style="color:#f92672">(&lt;/span>STATUS &lt;span style="color:#e6db74">&amp;#34;Found pg_config as &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>PG_CONFIG&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_FOUND&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> macro&lt;span style="color:#f92672">(&lt;/span>PG_CONFIG VAR OPT&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> execute_process&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> COMMAND &lt;span style="color:#e6db74">${&lt;/span>PG_CONFIG&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>OPT&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OUTPUT_VARIABLE &lt;span style="color:#e6db74">${&lt;/span>VAR&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OUTPUT_STRIP_TRAILING_WHITESPACE&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endmacro&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_config&lt;span style="color:#f92672">(&lt;/span>_pg_bindir --bindir&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_config&lt;span style="color:#f92672">(&lt;/span>_pg_includedir --includedir&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_config&lt;span style="color:#f92672">(&lt;/span>_pg_pkgincludedir --pkgincludedir&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_config&lt;span style="color:#f92672">(&lt;/span>_pg_sharedir --sharedir&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_config&lt;span style="color:#f92672">(&lt;/span>_pg_includedir_server --includedir-server&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_config&lt;span style="color:#f92672">(&lt;/span>_pg_libs --libs&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_config&lt;span style="color:#f92672">(&lt;/span>_pg_ldflags --ldflags&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_config&lt;span style="color:#f92672">(&lt;/span>_pg_ldflags_sl --ldflags_sl&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_config&lt;span style="color:#f92672">(&lt;/span>_pg_ldflags_ex --ldflags_ex&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_config&lt;span style="color:#f92672">(&lt;/span>_pg_pkglibdir --pkglibdir&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_config&lt;span style="color:#f92672">(&lt;/span>_pg_libdir --libdir&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_config&lt;span style="color:#f92672">(&lt;/span>_pg_version --version&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> separate_arguments&lt;span style="color:#f92672">(&lt;/span>_pg_ldflags&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> separate_arguments&lt;span style="color:#f92672">(&lt;/span>_pg_ldflags_sl&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> separate_arguments&lt;span style="color:#f92672">(&lt;/span>_pg_ldflags_ex&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_server_lib_dirs &lt;span style="color:#e6db74">${&lt;/span>_pg_libdir&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>_pg_pkglibdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_server_inc_dirs &lt;span style="color:#e6db74">${&lt;/span>_pg_pkgincludedir&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>_pg_includedir_server&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string&lt;span style="color:#f92672">(&lt;/span>REPLACE &lt;span style="color:#e6db74">&amp;#34;;&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34; &amp;#34;&lt;/span> _shared_link_options
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_pg_ldflags&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_pg_ldflags_sl&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_link_options &lt;span style="color:#e6db74">${&lt;/span>_pg_ldflags&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>_pg_ldflags_ex&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list&lt;span style="color:#f92672">(&lt;/span>APPEND _link_options &lt;span style="color:#e6db74">${&lt;/span>_pg_ldflags_ex&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_INCLUDE_DIRS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_pg_includedir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CACHE PATH
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;Top-level directory containing the PostgreSQL include directories.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_EXTENSION_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_pg_sharedir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/extension&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CACHE PATH &lt;span style="color:#e6db74">&amp;#34;Directory containing extension SQL and control files&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_SERVER_INCLUDE_DIRS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_server_inc_dirs&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CACHE PATH &lt;span style="color:#e6db74">&amp;#34;PostgreSQL include directories for server include files.&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_LIBRARY_DIRS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_pg_libdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CACHE PATH &lt;span style="color:#e6db74">&amp;#34;library directory for PostgreSQL&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_LIBRARIES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_pg_libs&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CACHE PATH &lt;span style="color:#e6db74">&amp;#34;Libraries for PostgreSQL&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_SHARED_LINK_OPTIONS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_shared_link_options&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CACHE STRING &lt;span style="color:#e6db74">&amp;#34;PostgreSQL linker options for shared libraries.&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_LINK_OPTIONS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_pg_ldflags&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">,&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_pg_ldflags_ex&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CACHE STRING &lt;span style="color:#e6db74">&amp;#34;PostgreSQL linker options for executables.&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_SERVER_LIBRARY_DIRS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_server_lib_dirs&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CACHE PATH &lt;span style="color:#e6db74">&amp;#34;PostgreSQL server library directories.&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_VERSION_STRING
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_pg_version&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CACHE STRING &lt;span style="color:#e6db74">&amp;#34;PostgreSQL version string&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>PostgreSQL_PACKAGE_LIBRARY_DIR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_pg_pkglibdir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CACHE STRING &lt;span style="color:#e6db74">&amp;#34;PostgreSQL package library directory&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> find_program&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PG_BINARY postgres
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PATHS &lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_ROOT_DIRECTORIES&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> HINTS &lt;span style="color:#e6db74">${&lt;/span>_pg_bindir&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PATH_SUFFIXES bin&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>NOT PG_BINARY&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>FATAL_ERROR &lt;span style="color:#e6db74">&amp;#34;Could not find postgres binary&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>STATUS &lt;span style="color:#e6db74">&amp;#34;Found postgres binary at &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>PG_BINARY&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> find_program&lt;span style="color:#f92672">(&lt;/span>PG_REGRESS pg_regress HINT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_PACKAGE_LIBRARY_DIR&lt;span style="color:#e6db74">}&lt;/span>/pgxs/src/test/regress&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>NOT PG_REGRESS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>STATUS &lt;span style="color:#e6db74">&amp;#34;Could not find pg_regress, tests not executed&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>STATUS &lt;span style="color:#e6db74">&amp;#34;PostgreSQL version &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_VERSION_STRING&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> found&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> STATUS
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;PostgreSQL package library directory: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_PACKAGE_LIBRARY_DIR&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>STATUS &lt;span style="color:#e6db74">&amp;#34;PostgreSQL libraries: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_LIBRARIES&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>STATUS &lt;span style="color:#e6db74">&amp;#34;PostgreSQL extension directory: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_EXTENSION_DIR&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>STATUS &lt;span style="color:#e6db74">&amp;#34;PostgreSQL linker options: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_LINK_OPTIONS&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> STATUS &lt;span style="color:#e6db74">&amp;#34;PostgreSQL shared linker options: &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_SHARED_LINK_OPTIONS&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># add_postgresql_extension(NAME ...)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># VERSION Version of the extension. Is used when generating the control file.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Required.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ENCODING Encoding for the control file. Optional.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># COMMENT Comment for the control file. Optional.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SOURCES List of source files to compile for the extension.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># REQUIRES List of extensions that are required by this extension.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SCRIPTS Script files.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># SCRIPT_TEMPLATES Template script files.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># REGRESS Regress tests.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span>&lt;span style="color:#f92672">(&lt;/span>add_postgresql_extension NAME&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_optional&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_single VERSION ENCODING&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_multi SOURCES SCRIPTS SCRIPT_TEMPLATES DEPENDS_LIB REQUIRES REGRESS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cmake_parse_arguments&lt;span style="color:#f92672">(&lt;/span>_ext &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_optional&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_single&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_multi&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>ARGN&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>NOT _ext_VERSION&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>FATAL_ERROR &lt;span style="color:#e6db74">&amp;#34;Extension version not set&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Here we are assuming that there is at least one source file, which is&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># strictly speaking not necessary for an extension. If we do not have source&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># files, we need to create a custom target and attach properties to that. We&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># expect the user to be able to add target properties after creating the&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># extension.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add_library&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span> MODULE &lt;span style="color:#e6db74">${&lt;/span>_ext_SOURCES&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_link_flags &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_SHARED_LINK_OPTIONS&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> foreach&lt;span style="color:#f92672">(&lt;/span>_dir &lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_SERVER_LIBRARY_DIRS&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_link_flags &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_link_flags&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> -L&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_dir&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endforeach&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Collect and build script files to install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_script_files &lt;span style="color:#e6db74">${&lt;/span>_ext_SCRIPTS&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> foreach&lt;span style="color:#f92672">(&lt;/span>_template &lt;span style="color:#e6db74">${&lt;/span>_ext_SCRIPT_TEMPLATES&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> string&lt;span style="color:#f92672">(&lt;/span>REGEX REPLACE &lt;span style="color:#e6db74">&amp;#34;\.in&lt;/span>$&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span> _script &lt;span style="color:#e6db74">${&lt;/span>_template&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configure_file&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_template&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>_script&lt;span style="color:#e6db74">}&lt;/span> @ONLY&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list&lt;span style="color:#f92672">(&lt;/span>APPEND _script_files &lt;span style="color:#e6db74">${&lt;/span>CMAKE_CURRENT_BINARY_DIR&lt;span style="color:#e6db74">}&lt;/span>/&lt;span style="color:#e6db74">${&lt;/span>_script&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> STATUS &lt;span style="color:#e6db74">&amp;#34;Building script file &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_script&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> from template file &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_template&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endforeach&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>APPLE&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_link_flags &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_link_flags&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> -bundle_loader &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>PG_BINARY&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>_ext_DEPENDS_LIB&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target_link_libraries&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span> PRIVATE &lt;span style="color:#e6db74">${&lt;/span>_ext_DEPENDS_LIB&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set_target_properties&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PROPERTIES PREFIX &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LINK_FLAGS &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_link_flags&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> POSITION_INDEPENDENT_CODE ON
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CXX_STANDARD &lt;span style="color:#ae81ff">23&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CXX_EXTENSIONS OFF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> XX_STANDARD_REQUIRED ON&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target_include_directories&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PRIVATE &lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_SERVER_INCLUDE_DIRS&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PUBLIC &lt;span style="color:#e6db74">${&lt;/span>CMAKE_CURRENT_SOURCE_DIR&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target_compile_options&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> PRIVATE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#34;-Werror&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-Wall&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-fvisibility=hidden&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-fvisibility-inlines-hidden&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-Wpointer-arith&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-Wendif-labels&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-Wmissing-format-attribute&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-Wimplicit-fallthrough=3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-Wcast-function-type&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-Wshadow=compatible-local&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-Wformat-security&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;-fno-strict-aliasing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># Generate control file at build time (which is when GENERATE evaluate the&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># contents). We do not know the target file name until then.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_control_file &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>CMAKE_CURRENT_BINARY_DIR&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.control&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> GENERATE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> OUTPUT &lt;span style="color:#e6db74">${&lt;/span>_control_file&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CONTENT
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;# This file is generated content from add_postgresql_extension.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># No point in modifying it, it will be overwritten anyway.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Default version, always set
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">default_version = &amp;#39;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_ext_VERSION&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Module pathname generated from target shared library name. Use
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># MODULE_PATHNAME in script file.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">module_pathname = &amp;#39;&lt;/span>$libdir&lt;span style="color:#e6db74">/&lt;/span>$&lt;span style="color:#e6db74">&amp;lt;TARGET_FILE_NAME:&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;gt;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Comment for extension. Set using COMMENT option. Can be set in
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># script file as well.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&lt;/span>$&lt;span style="color:#e6db74">&amp;lt;&lt;/span>$&lt;span style="color:#e6db74">&amp;lt;NOT:&lt;/span>$&lt;span style="color:#e6db74">&amp;lt;BOOL:&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_ext_COMMENT&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;gt;&amp;gt;:#&amp;gt;comment = &amp;#39;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_ext_COMMENT&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Encoding for script file. Set using ENCODING option.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&lt;/span>$&lt;span style="color:#e6db74">&amp;lt;&lt;/span>$&lt;span style="color:#e6db74">&amp;lt;NOT:&lt;/span>$&lt;span style="color:#e6db74">&amp;lt;BOOL:&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_ext_ENCODING&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;gt;&amp;gt;:#&amp;gt;encoding = &amp;#39;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_ext_ENCODING&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Required extensions. Set using REQUIRES option (multi-valued).
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&lt;/span>$&lt;span style="color:#e6db74">&amp;lt;&lt;/span>$&lt;span style="color:#e6db74">&amp;lt;NOT:&lt;/span>$&lt;span style="color:#e6db74">&amp;lt;BOOL:&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_ext_REQUIRES&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;gt;&amp;gt;:#&amp;gt;requires = &amp;#39;&lt;/span>$&lt;span style="color:#e6db74">&amp;lt;JOIN:&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_ext_REQUIRES&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">,&lt;/span>$&lt;span style="color:#e6db74">&amp;lt;COMMA&amp;gt;&amp;gt;&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> install&lt;span style="color:#f92672">(&lt;/span>TARGETS &lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span> LIBRARY DESTINATION &lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_PACKAGE_LIBRARY_DIR&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> install&lt;span style="color:#f92672">(&lt;/span>FILES &lt;span style="color:#e6db74">${&lt;/span>_control_file&lt;span style="color:#e6db74">}&lt;/span> &lt;span style="color:#e6db74">${&lt;/span>_script_files&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> DESTINATION &lt;span style="color:#e6db74">${&lt;/span>PostgreSQL_EXTENSION_DIR&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>_ext_REGRESS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> foreach&lt;span style="color:#f92672">(&lt;/span>_test &lt;span style="color:#e6db74">${&lt;/span>_ext_REGRESS&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_sql_file &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>CMAKE_CURRENT_SOURCE_DIR&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/sql/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_test&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.sql&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> set&lt;span style="color:#f92672">(&lt;/span>_out_file &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>CMAKE_CURRENT_SOURCE_DIR&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/expected/&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_test&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.out&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>NOT EXISTS &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_sql_file&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>FATAL_ERROR &lt;span style="color:#e6db74">&amp;#34;Test file &amp;#39;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_sql_file&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#39; does not exist!&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>NOT EXISTS &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_out_file&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file&lt;span style="color:#f92672">(&lt;/span>WRITE &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_out_file&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> message&lt;span style="color:#f92672">(&lt;/span>STATUS &lt;span style="color:#e6db74">&amp;#34;Created empty file &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>_out_file&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endforeach&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>PG_REGRESS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add_test&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> NAME &lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> COMMAND
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">${&lt;/span>PG_REGRESS&lt;span style="color:#e6db74">}&lt;/span> --temp-instance&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>CMAKE_BINARY_DIR&lt;span style="color:#e6db74">}&lt;/span>/tmp_check
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --inputdir&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>CMAKE_CURRENT_SOURCE_DIR&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --outputdir&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>CMAKE_CURRENT_BINARY_DIR&lt;span style="color:#e6db74">}&lt;/span> --load-extension&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">${&lt;/span>_ext_REGRESS&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add_custom_target&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">${&lt;/span>NAME&lt;span style="color:#e6db74">}&lt;/span>_update_results
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> COMMAND
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">${&lt;/span>CMAKE_COMMAND&lt;span style="color:#e6db74">}&lt;/span> -E copy_if_different
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">${&lt;/span>CMAKE_CURRENT_BINARY_DIR&lt;span style="color:#e6db74">}&lt;/span>/results/*.out
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">${&lt;/span>CMAKE_CURRENT_SOURCE_DIR&lt;span style="color:#e6db74">}&lt;/span>/expected&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>endfunction&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>&lt;span style="color:#f92672">(&lt;/span>PG_REGRESS&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># We add a custom target to get output when there is a failure.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add_custom_target&lt;span style="color:#f92672">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> test_verbose COMMAND &lt;span style="color:#e6db74">${&lt;/span>CMAKE_CTEST_COMMAND&lt;span style="color:#e6db74">}&lt;/span> --force-new-ctest-process
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --verbose --output-on-failure&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>endif&lt;span style="color:#f92672">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="添加资源到文件">添加资源到文件&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>类似 xxd -i 选项，把一些资源序列化到文件中，然后在程序中读取&lt;/p></description></item><item><title>gdb 要点简记</title><link>https://askyx.github.io/posts/others/gdb/</link><pubDate>Tue, 11 Jul 2023 10:17:52 +0800</pubDate><guid>https://askyx.github.io/posts/others/gdb/</guid><description>&lt;h2 id="配置">配置&lt;/h2>
&lt;pre>&lt;code>set print pretty on
set print elements unlimited
set pagination off
&lt;/code>&lt;/pre>
&lt;h2 id="python-脚本">python 脚本&lt;/h2>
&lt;p>直接安装的 gdb 都是预先编译 python 的，可以使用 python 实现一些有用的功能，比如自定义命令，打印自定义类型等。可以参考 &lt;a href="https://sourceware.org/gdb/onlinedocs/gdb/Python-API.html#Python-API" target="_blank">gdb python 扩展&lt;/a>
&lt;/p></description></item><item><title>Postgres 技术内幕，Optimizer过程分析</title><link>https://askyx.github.io/posts/postgres/optimizer/</link><pubDate>Mon, 08 May 2023 11:33:02 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/optimizer/</guid><description>&lt;h2 id="1-逻辑优化">1. 逻辑优化&lt;/h2>
&lt;h3 id="1-子查询提升">1. 子查询提升&lt;/h3>
&lt;ol>
&lt;li>exist 相关子链接会被提升，非相关子链接不会进行优化， 但是会生成 initplan，只需要执行一次&lt;/li>
&lt;li>any 相关子查询不会提升，非相关子查询才能进行优化，实际上any的非相关子查询隐含一个外部引用的条件， 实际上还是相关子查询&lt;/li>
&lt;li>如果是 join 条件中的子链接，则需要遵守 &amp;ldquo;any 的 左边需要是对应链接类型中不含输出的那一边&amp;rdquo;， 例如 left join 要求 any 的 左边只能是关联右边的属性，因为如果是左边，提升之后左边现在有约束条件，可能不会全部输出&lt;/li>
&lt;li>子链接存在复杂表达式不支持提升，如cte，聚合操作等&lt;/li>
&lt;li>子查询类似&lt;/li>
&lt;/ol>
&lt;h3 id="2-表达式优化">2. 表达式优化&lt;/h3>
&lt;ol>
&lt;li>常量折叠&lt;/li>
&lt;li>谓词规范
1. 简化
2. 约束条件拉平
3. 提取公共项&lt;/li>
&lt;/ol>
&lt;h3 id="3-group-杂项消除">3. group 杂项消除&lt;/h3>
&lt;p>如果group 中包含 主键，则可以直接消除其他&lt;/p></description></item><item><title>宏使用模板速查</title><link>https://askyx.github.io/posts/postgres/defineinc/</link><pubDate>Wed, 22 Feb 2023 14:00:48 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/defineinc/</guid><description>&lt;h2 id="前置知识">前置知识&lt;/h2>
&lt;p>&lt;a href="http://c.biancheng.net/view/446.html" target="_blank">C语言宏的定义和宏的使用方法&lt;/a>
&lt;/p>
&lt;h3 id="变长参数">变长参数&lt;/h3>
&lt;ul>
&lt;li>这里输出的是相同类型的参数日志，不同的需要特殊处理，或者直接自定义输出格式&lt;/li>
&lt;li>缺点：
&lt;ul>
&lt;li>参数类型固定&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">double&lt;/span> xxa &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.0f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">double&lt;/span> xxb &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.2f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">double&lt;/span> xxc &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.3f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">double&lt;/span> xxd &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.4f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">double&lt;/span> xxe &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.5f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">double&lt;/span> xxf &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.6f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">double&lt;/span> xxg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.7f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">double&lt;/span> xxh &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.8f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">double&lt;/span> xxi &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1.9f&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define DUMPVAR(VAR) #VAR &amp;#34;(%.2lf)&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FL_DOARG1(a, ...) DUMPVAR(a)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FL_DOARG2(a, v, ...) FL_DOARG1(a) &amp;#34;, &amp;#34; FL_DOARG1(v, __VA_ARGS__)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FL_DOARG3(a, v, ...) FL_DOARG1(a) &amp;#34;, &amp;#34; FL_DOARG2(v, __VA_ARGS__)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FL_DOARG4(a, v, ...) FL_DOARG1(a) &amp;#34;, &amp;#34; FL_DOARG3(v, __VA_ARGS__)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FL_DOARG5(a, v, ...) FL_DOARG1(a) &amp;#34;, &amp;#34; FL_DOARG4(v, __VA_ARGS__)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FL_DOARG6(a, v, ...) FL_DOARG1(a) &amp;#34;, &amp;#34; FL_DOARG5(v, __VA_ARGS__)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FL_DOARG7(a, v, ...) FL_DOARG1(a) &amp;#34;, &amp;#34; FL_DOARG6(v, __VA_ARGS__)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FL_DOARG8(a, v, ...) FL_DOARG1(a) &amp;#34;, &amp;#34; FL_DOARG7(v, __VA_ARGS__)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FL_DOARG9(a, v, ...) FL_DOARG1(a) &amp;#34;, &amp;#34; FL_DOARG8(v, __VA_ARGS__)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define VA_NUM_ARGS_IMPL(x1, x2, x3, x4, x5, x6, x7, x8, x9, N, ...) N
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define VA_NUM_ARGS(...) VA_NUM_ARGS_IMPL(__VA_ARGS__, 9, 8, 7, 6, 5, 4, 3, 2, 1)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FL_CONCAT_(l, r) l##r
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FL_CONCAT(l, r) FL_CONCAT_(l, r)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define MAKE_VAR_MACRO(PREFIX, ...) FL_CONCAT(PREFIX, VA_NUM_ARGS(__VA_ARGS__))
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define FFFOM(...) MAKE_VAR_MACRO(FL_DOARG, __VA_ARGS__)(__VA_ARGS__)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define DUMP(...) \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> char costfac[1000]; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> snprintf(costfac, 1000, FFFOM(__VA_ARGS__), ##__VA_ARGS__);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#f92672">*&lt;/span>argv[])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 输出保存在字符串中，有保存场景的时候使用
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> DUMP(xxa,xxb,xxc,xxd,xxe,xxf,xxg,xxh,xxi);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> printf(&lt;span style="color:#e6db74">&amp;#34;%s&amp;#34;&lt;/span>, costfac);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="enum-定义">enum 定义&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define ENUM_DEFINE_ITEM(EnumType, EnumVal) EnumVal,
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/** Used in defining EnumTypeToString(). */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define ENUM_TO_STRING(EnumType, EnumVal) \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> case EnumType::EnumVal: { \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> return #EnumVal; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">/** Used in defining EnumTypeFromString(). Hardcoded to expect str to be in scope. */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define ENUM_FROM_STRING(EnumType, EnumVal) \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> else if (str == #EnumVal) { &lt;/span>&lt;span style="color:#75715e">/* NOLINT readability/braces confusion */&lt;/span>&lt;span style="color:#75715e"> \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> return EnumType::EnumVal; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define ENUM_DEFINE(EnumName, EnumCppType, EnumValMacro) \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> enum class EnumName : EnumCppType { EnumValMacro(ENUM_DEFINE_ITEM) NUM_ENUM_ENTRIES }; \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &lt;/span>&lt;span style="color:#75715e">/** @return String version of @p type. */&lt;/span>&lt;span style="color:#75715e"> \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> inline std::string EnumName##ToString(EnumName type) { &lt;/span>&lt;span style="color:#75715e">/* NOLINT inline usage */&lt;/span>&lt;span style="color:#75715e"> \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> switch (type) { \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> EnumValMacro(ENUM_TO_STRING); \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> default: { \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> throw std::runtime_error((&amp;#34;No enum conversion for: &amp;#34; + std::to_string(static_cast&amp;lt;uint64_t&amp;gt;(type))).c_str()); \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> } \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> } \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> } \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> &lt;/span>&lt;span style="color:#75715e">/** @return Enum version of @p str. */&lt;/span>&lt;span style="color:#75715e"> \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> inline EnumName EnumName##FromString(const std::string &amp;amp;str) { &lt;/span>&lt;span style="color:#75715e">/* NOLINT inline usage */&lt;/span>&lt;span style="color:#75715e"> \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> if (false) { &lt;/span>&lt;span style="color:#75715e">/* This check starts an if-else chain for the macro. */&lt;/span>&lt;span style="color:#75715e"> \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> } \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> EnumValMacro(ENUM_FROM_STRING) else { &lt;/span>&lt;span style="color:#75715e">/* NOLINT readability/braces confusion */&lt;/span>&lt;span style="color:#75715e"> \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> throw std::runtime_error(&amp;#34;No enum conversion for: &amp;#34; + str); \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> } \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> }
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// use
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#define DEFIN_SQLTYPE(T) \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> T(SqlType, T_INT) \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> T(SqlType, T_DOUBLE) \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> T(SqlType, T_STRING) \
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> T(SqlType, T_BOOL)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ENUM_DEFINE(SqlType, &lt;span style="color:#66d9ef">uint8_t&lt;/span>, DEFIN_SQLTYPE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#undef DEFIN_SQLTYPE
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>执行计划代价计算规则梳理</title><link>https://askyx.github.io/posts/postgres/cost/</link><pubDate>Fri, 17 Feb 2023 09:38:28 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/cost/</guid><description>&lt;ol>
&lt;li>表和各个index的物理结构及数据操作&lt;/li>
&lt;li>统计信息&lt;/li>
&lt;li>cost 计算&lt;/li>
&lt;li>demo&lt;/li>
&lt;li>选择率的计算&lt;/li>
&lt;li>基表cost&lt;/li>
&lt;li>index cost&lt;/li>
&lt;/ol>
&lt;p>&lt;a href="http://postgres.cn/docs/14/pageinspect.html" target="_blank">pageinspect&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://www.mengqingzhong.com/2020/10/01/postgresql-index-linnks/" target="_blank">PostgreSQL索引系列文章链接汇总&lt;/a>
&lt;/p>
&lt;h2 id="统计信息与选择率与代价计算">统计信息与选择率与代价计算&lt;/h2>
&lt;p>当前统计信息会收集下面数据，可以使用视图 &lt;code>pg_stats&lt;/code> 查看，在使用统计信息的时候，使用相关信息计算选择率&lt;/p></description></item><item><title>事务知识简记</title><link>https://askyx.github.io/posts/postgres/tx/</link><pubDate>Wed, 08 Feb 2023 09:58:09 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/tx/</guid><description>&lt;h2 id="事务基础">事务基础&lt;/h2>
&lt;ol>
&lt;li>ACID&lt;/li>
&lt;li>事务演进&lt;/li>
&lt;li>隔离级别&lt;/li>
&lt;li>MVCC&lt;/li>
&lt;li>2pl&lt;/li>
&lt;li>主流数据库实现&lt;/li>
&lt;/ol>
&lt;h2 id="pg事务">PG事务&lt;/h2>
&lt;h3 id="pg高链接数导致tps下降-12">pg高链接数导致tps下降 &lt;a href="https://mingjie.blog.csdn.net/article/details/125931881" target="_blank">1&lt;/a>
|&lt;a href="https://mingjie.blog.csdn.net/article/details/125935699" target="_blank">2&lt;/a>
&lt;/h3>
&lt;p>简单总结&lt;/p>
&lt;ul>
&lt;li>更新xmin的ping-pong问题，缓存失效，之前的结构设计不合理，xid存放位置不连续，且xmin每次都需要从 pgxact 中获取，此值会被频繁修改&lt;/li>
&lt;li>修改 事务相关的组织格式，xids 现在单独存放在数组中&lt;/li>
&lt;li>使用 xactCompletionCount 进行事务计算，快照原则上只要没有变化，则不需要重新获取，所以在事务提交或者事务abort的时候，进行自增，只有检测到 xactCompletionCount 变化了才重新获取快照&lt;/li>
&lt;li>之前需要 xmin 用于vacuum ，现在使用新机制判断，现在在循环中遍历 xids 取 min ， 不对立刻同步其他的 min， 所以这是一个粗略值，在之后可以简单进行判断，如果在之后获得了比 min 更大的值，才进行精确判断，且更新 min&lt;/li>
&lt;/ul>
&lt;h3 id="无锁算法提交事务减少proc加锁时间提升并发">&lt;a href="https://www.bookstack.cn/read/aliyun-rds-core/c3e73d0a666188d4.md" target="_blank">无锁算法提交事务，减少proc加锁时间，提升并发&lt;/a>
&lt;/h3>
&lt;p>无锁算法是利用CPU的原子操作实现的数据结构和算法来解决原来只能用锁才能解决的并发控制问题&lt;/p></description></item><item><title>Bison Note</title><link>https://askyx.github.io/posts/course/15441/note/</link><pubDate>Thu, 17 Nov 2022 14:34:14 +0800</pubDate><guid>https://askyx.github.io/posts/course/15441/note/</guid><description>&lt;h2 id="note">note&lt;/h2>
&lt;ol>
&lt;li>As Bison reads tokens, it pushes them onto a stack along with their semantic values. The stack is called the parser stack. Pushing a token is traditionally called shifting.&lt;/li>
&lt;li>When the last n tokens and groupings shifted match the components of a grammar rule, they can be combined according to that rule. This is called reduction&lt;/li>
&lt;li>The lookahead token is stored in the variable yychar. Its semantic value and location, if any, are stored in the variables yylval and yylloc.&lt;/li>
&lt;li>This situation, where either a shift or a reduction would be valid, is called a shift/reduce conflict, Bison is designed to resolve these conflicts by choosing to shift, unless otherwise directed by operator precedence declarations.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>if_stmt:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;if&amp;#34;&lt;/span> expr &lt;span style="color:#e6db74">&amp;#34;then&amp;#34;&lt;/span> stmt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">|&lt;/span> &lt;span style="color:#e6db74">&amp;#34;if&amp;#34;&lt;/span> expr &lt;span style="color:#e6db74">&amp;#34;then&amp;#34;&lt;/span> stmt &lt;span style="color:#e6db74">&amp;#34;else&amp;#34;&lt;/span> stmt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> x then &lt;span style="color:#66d9ef">if&lt;/span> y then win; &lt;span style="color:#66d9ef">else&lt;/span> lose;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> x then &lt;span style="color:#66d9ef">do&lt;/span>; &lt;span style="color:#66d9ef">if&lt;/span> y then win; &lt;span style="color:#66d9ef">else&lt;/span> lose; end;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">==========&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> x then &lt;span style="color:#66d9ef">if&lt;/span> y then win; &lt;span style="color:#66d9ef">else&lt;/span> lose;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> x then &lt;span style="color:#66d9ef">do&lt;/span>; &lt;span style="color:#66d9ef">if&lt;/span> y then win; end; &lt;span style="color:#66d9ef">else&lt;/span> lose;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>%nonassoc declares that it is a syntax error to find the same operator twice “in a row&amp;quot; creates run-time error: using the operator in a associative way is a syntax error.&lt;/li>
&lt;li>%precedence allows to define only precedence and no associativity at all creates compile-time errors: an operator can be involved in an associativity-related conflict,&lt;/li>
&lt;li>%prec modifier declares the precedence of a particular rule by specifying a terminal symbol whose precedence should be used for that rule.&lt;/li>
&lt;/ul>
&lt;ol start="5">
&lt;li>the resolution of conflicts works by comparing the precedence of the rule being considered with that of the lookahead token. If the token’s precedence is higher, the choice is to shift. If the rule’s precedence is higher, the choice is to reduce&lt;/li>
&lt;li>A reduce/reduce conflict occurs if there are two or more rules that apply to the same sequence of input&lt;/li>
&lt;li>Bison resolves a reduce/reduce conflict by choosing to use the rule that appears first in the grammar&lt;/li>
&lt;/ol></description></item><item><title>xx</title><link>https://askyx.github.io/posts/others/log/</link><pubDate>Thu, 17 Nov 2022 14:34:14 +0800</pubDate><guid>https://askyx.github.io/posts/others/log/</guid><description>&lt;p>语句&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">prepare&lt;/span> s3(int, int) &lt;span style="color:#66d9ef">as&lt;/span> &lt;span style="color:#66d9ef">select&lt;/span> no_o_id &lt;span style="color:#66d9ef">from&lt;/span> bmsql_new_order &lt;span style="color:#66d9ef">where&lt;/span> no_w_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> no_d_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">$&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#66d9ef">order&lt;/span> &lt;span style="color:#66d9ef">by&lt;/span> no_o_id &lt;span style="color:#66d9ef">asc&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> QUERY PLAN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">---------------------------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">Cluster&lt;/span> Gather (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">291&lt;/span>.&lt;span style="color:#ae81ff">52&lt;/span>..&lt;span style="color:#ae81ff">430&lt;/span>.&lt;span style="color:#ae81ff">37&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">459&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Remote node: &lt;span style="color:#ae81ff">16386&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Sort (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">291&lt;/span>.&lt;span style="color:#ae81ff">52&lt;/span>..&lt;span style="color:#ae81ff">292&lt;/span>.&lt;span style="color:#ae81ff">67&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">459&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">Output&lt;/span>: no_o_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sort &lt;span style="color:#66d9ef">Key&lt;/span>: bmsql_new_order.no_o_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Bitmap Heap Scan &lt;span style="color:#66d9ef">on&lt;/span> &lt;span style="color:#66d9ef">public&lt;/span>.bmsql_new_order (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">13&lt;/span>.&lt;span style="color:#ae81ff">46&lt;/span>..&lt;span style="color:#ae81ff">271&lt;/span>.&lt;span style="color:#ae81ff">23&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">459&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">Output&lt;/span>: no_o_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">Recheck&lt;/span> Cond: ((bmsql_new_order.no_w_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#66d9ef">AND&lt;/span> (bmsql_new_order.no_d_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Bitmap &lt;span style="color:#66d9ef">Index&lt;/span> Scan &lt;span style="color:#66d9ef">on&lt;/span> bmsql_new_order_pkey (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">13&lt;/span>.&lt;span style="color:#ae81ff">34&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">918&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">Index&lt;/span> Cond: ((bmsql_new_order.no_w_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#66d9ef">AND&lt;/span> (bmsql_new_order.no_d_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Remote node: &lt;span style="color:#ae81ff">16386&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> QUERY PLAN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--------------------------------------------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">Data&lt;/span> Node Scan &lt;span style="color:#66d9ef">on&lt;/span> &lt;span style="color:#e6db74">&amp;#34;__REMOTE_SORT_QUERY__&amp;#34;&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1000&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">Output&lt;/span>: bmsql_new_order.no_o_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Node&lt;span style="color:#f92672">/&lt;/span>s: data_1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Remote query: &lt;span style="color:#66d9ef">SELECT&lt;/span> no_o_id &lt;span style="color:#66d9ef">FROM&lt;/span> &lt;span style="color:#66d9ef">ONLY&lt;/span> &lt;span style="color:#66d9ef">public&lt;/span>.bmsql_new_order &lt;span style="color:#66d9ef">WHERE&lt;/span> ((no_w_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#66d9ef">AND&lt;/span> (no_d_id &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>)) &lt;span style="color:#66d9ef">ORDER&lt;/span> &lt;span style="color:#66d9ef">BY&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>最直接原因是优化器代码变动，antdb使用的内核代码比xc的新，antdb在添加remote query 功能的时候由于代码变动，有部分函数由于代码变动，可能没有覆盖到，
以上面的例子为例
在pgxc中，grouping_planner中对sort的处理逻辑如下，直接使用创建sort的path之后使用create_remotesort_plan，在处理后的执行计划中有一个&lt;code>__REMOTE_SORT_QUERY__&lt;/code>的rte，这里抓取了pgxc和antdb关键节点的执行计划，可以直接对比&lt;code>grouping_planner&lt;/code>前后的执行计划的变化&lt;/p></description></item><item><title>Libpqxx</title><link>https://askyx.github.io/posts/readcode/libpqxx/</link><pubDate>Tue, 08 Nov 2022 14:35:50 +0800</pubDate><guid>https://askyx.github.io/posts/readcode/libpqxx/</guid><description>&lt;h2 id="定位">定位&lt;/h2>
&lt;p>c++的客户端接口，官方指定，特点时使用比较激进的C++实现，最新代码编译需要支持C++17，下个版本需要C++20，和其他pg对外接口实现类似的功能，但是由于使用C++实现，所以源码不多，可以用来快速的熟悉此类工具的大致的结构，后期可以去过一遍ODBC&lt;/p></description></item><item><title>内存管理</title><link>https://askyx.github.io/posts/postgres/memctx/</link><pubDate>Tue, 01 Nov 2022 12:01:31 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/memctx/</guid><description>&lt;h2 id="内存上下文">内存上下文&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://smartkeyerror.com/PostgreSQL-MemoryContext" target="_blank">https://smartkeyerror.com/PostgreSQL-MemoryContext&lt;/a>
&lt;/li>
&lt;/ul>
&lt;p>源码主要在&lt;code>mctx.c&lt;/code>中，主要是目的是设置工作空间，避免重复的在系统上申请资源，且为了避免异常情况下的内存泄露问题，所以实现了内存上下文&lt;/p>
&lt;ul>
&lt;li>目前有三种底层的实现
&lt;ol>
&lt;li>AllocSet(常规的内存分配机制，先分配block，之后再从block上分配chunk，分配得内存一般不会释放，而是使用空闲链表管理)&lt;/li>
&lt;li>Generation(新加，内存生命周期相近的时候使用，目前只在gist 和 replication 模块使用)&lt;/li>
&lt;li>Slab(分配大小等大的chunk，目前只在replication 模块使用)&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>更多的是因为频繁的malloc会导致内存碎片，且由于malloc需要额外的空间记录head和foot的位置，所以还存在的问题就是空间的浪费，另外最大的问题是内存泄漏问题，使用指针在方法间传递不容易管理&lt;/li>
&lt;li>大概类似c++的内存管理方法，把&lt;/li>
&lt;/ul>
&lt;h2>&lt;/h2></description></item><item><title>RocksDB源码分析</title><link>https://askyx.github.io/posts/readcode/rocksdb/</link><pubDate>Fri, 21 Oct 2022 16:38:26 +0800</pubDate><guid>https://askyx.github.io/posts/readcode/rocksdb/</guid><description>&lt;p>&lt;a href="http://alexstocks.github.io/html/rocksdb.html" target="_blank">note1&lt;/a>
&lt;/p>
&lt;h2 id="slice">slice&lt;/h2>
&lt;p>和levelDB类似，无太大变化&lt;/p>
&lt;h2 id="pinnableslice">PinnableSlice&lt;/h2>
&lt;p>&lt;a href="http://kernelmaker.github.io/Rocksdb_pinnableslice" target="_blank">http://kernelmaker.github.io/Rocksdb_pinnableslice&lt;/a>
&lt;br>
主要作用是延长数据生命周期，减少数据拷贝。PinnableSlice中记录数据的指针，使用的时候通过指针进行解引用。不需要从最底层进行数据的copy，数据的生命周期使用&lt;code>Reset&lt;/code>和其析构函数确定，此时调用cleanup注册的cleanup函数对数据进行处理，&lt;/p></description></item><item><title>postgres Parser</title><link>https://askyx.github.io/posts/postgres/parser/</link><pubDate>Mon, 10 Oct 2022 12:03:18 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/parser/</guid><description>&lt;h2 id="bison">BISON&lt;/h2>
&lt;p>1.2 From Formal Rules to Bison Input&lt;/p>
&lt;ul>
&lt;li>Terminal&lt;/li>
&lt;li>Nonterminal&lt;/li>
&lt;/ul>
&lt;p>1.3 Semantic Values
A formal grammar selects tokens only by their classifications
each token in a Bison grammar has both a token kind and a semantic value
强类型，有类型和值的区别&lt;/p>
&lt;p>1.4 Semantic Actions
The action says how to produce the semantic value&lt;/p>
&lt;p>1.5 Writing GLR Parsers
略，默认是LR文法，但是有RR和SR冲突，所以为了不那么严格限制语法，在一定程度上允许冲突。这里不做了解&lt;/p></description></item><item><title>Locks</title><link>https://askyx.github.io/posts/postgres/locks/</link><pubDate>Wed, 28 Sep 2022 15:42:18 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/locks/</guid><description>&lt;h2 id="spinlock">SpinLock&lt;/h2>
&lt;p>使用tas实现的自旋锁。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (TAS_SPIN(lock))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> perform_spin_delay(&lt;span style="color:#f92672">&amp;amp;&lt;/span>delayStatus);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>perform_spin_delay(SpinDelayStatus &lt;span style="color:#f92672">*&lt;/span>status)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* CPU-specific delay each time through the loop */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SPIN_DELAY();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Block the process every spins_per_delay tries */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">++&lt;/span>(status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>spins) &lt;span style="color:#f92672">&amp;gt;=&lt;/span> spins_per_delay)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">++&lt;/span>(status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>delays) &lt;span style="color:#f92672">&amp;gt;&lt;/span> NUM_DELAYS)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_lock_stuck(status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>file, status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>line, status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>func);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) &lt;span style="color:#75715e">/* first time to delay? */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay &lt;span style="color:#f92672">=&lt;/span> MIN_DELAY_USEC;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_usleep(status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* increase delay by a random fraction between 1X and 2X */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay &lt;span style="color:#f92672">+=&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span>) (status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_prng_double(&lt;span style="color:#f92672">&amp;amp;&lt;/span>pg_global_prng_state) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0.5&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* wrap back to minimum delay when max is exceeded */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay &lt;span style="color:#f92672">&amp;gt;&lt;/span> MAX_DELAY_USEC)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay &lt;span style="color:#f92672">=&lt;/span> MIN_DELAY_USEC;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>spins &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果没有tas，则使用信号量实现，属于最底层的锁&lt;/p></description></item><item><title>Postgres Optimizer</title><link>https://askyx.github.io/posts/postgres/opt/</link><pubDate>Fri, 22 Jul 2022 09:24:24 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/opt/</guid><description>&lt;!-- cover: "img/hello.jpg" -->
&lt;h1 id="postgres-optimizer-extend">Postgres Optimizer Extend&lt;/h1>
&lt;p>对文章的技术性验证&lt;/p>
&lt;p>These directories take the Query structure returned by the parser, and
generate a plan used by the executor. The /plan directory generates the
actual output plan, the /path code generates all possible ways to join the
tables, and /prep handles various preprocessing steps for special cases.
/util is utility stuff. /geqo is the separate &amp;ldquo;genetic optimization&amp;rdquo; planner
&amp;mdash; it does a semi-random search through the join tree space, rather than
exhaustively considering all possible join trees. (But each join considered
by /geqo is given to /path to create paths for, so we consider all possible
implementation paths for each specific join pair even in GEQO mode.)&lt;/p></description></item><item><title>Postgres Storage</title><link>https://askyx.github.io/posts/postgres/storage/</link><pubDate>Thu, 21 Jul 2022 09:15:05 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/storage/</guid><description>&lt;h2 id="存储">存储&lt;/h2>
&lt;h3 id="内存">内存&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>共享内存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>本地内存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>缓存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>内存上下文&lt;/p>
&lt;/li>
&lt;li>
&lt;p>缓存空间管理&lt;br>
数据块的缓存，减少磁盘IO，有共享缓存和进程缓存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Cache&lt;br>
数据块之外的缓存，例如系统表&lt;/p>
&lt;ul>
&lt;li>系统表缓存不会缓存整个表，是以block为单位缓存？&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>虚拟文件描述符&lt;br>
系统中文件有打开的上限，使用VFD可以突破这种限制，本质上是一个LRU缓存&lt;/p></description></item><item><title>数据库文章资源汇总</title><link>https://askyx.github.io/posts/static/note/</link><pubDate>Wed, 20 Jul 2022 17:44:29 +0800</pubDate><guid>https://askyx.github.io/posts/static/note/</guid><description>&lt;h2 id="爬虫">爬虫&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> requests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> bs4 &lt;span style="color:#f92672">import&lt;/span> BeautifulSoup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>prefix &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;http://mysql.taobao.org&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 获取文章名和url（文章名,url）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">query_name_url&lt;/span>(url: str):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resp &lt;span style="color:#f92672">=&lt;/span> requests&lt;span style="color:#f92672">.&lt;/span>get(url)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> soup &lt;span style="color:#f92672">=&lt;/span> BeautifulSoup(resp&lt;span style="color:#f92672">.&lt;/span>content&lt;span style="color:#f92672">.&lt;/span>decode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>), &lt;span style="color:#e6db74">&amp;#34;html.parser&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tags &lt;span style="color:#f92672">=&lt;/span> soup&lt;span style="color:#f92672">.&lt;/span>findAll(&lt;span style="color:#e6db74">&amp;#39;a&amp;#39;&lt;/span>, {&lt;span style="color:#e6db74">&amp;#39;target&amp;#39;&lt;/span>: {&lt;span style="color:#e6db74">&amp;#39;_top&amp;#39;&lt;/span>}})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> urls &lt;span style="color:#f92672">=&lt;/span> [v &lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> tags &lt;span style="color:#66d9ef">if&lt;/span> v[&lt;span style="color:#e6db74">&amp;#39;href&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>find(&lt;span style="color:#e6db74">&amp;#39;/monthly/&amp;#39;&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> [(str(v&lt;span style="color:#f92672">.&lt;/span>string)&lt;span style="color:#f92672">.&lt;/span>strip(), prefix &lt;span style="color:#f92672">+&lt;/span> v[&lt;span style="color:#e6db74">&amp;#39;href&amp;#39;&lt;/span>]) &lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> urls]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 获取所有月报链接（月报名,url）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">query_monthly_url&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resp &lt;span style="color:#f92672">=&lt;/span> requests&lt;span style="color:#f92672">.&lt;/span>get(&lt;span style="color:#e6db74">&amp;#39;http://mysql.taobao.org/monthly/&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> soup &lt;span style="color:#f92672">=&lt;/span> BeautifulSoup(resp&lt;span style="color:#f92672">.&lt;/span>content&lt;span style="color:#f92672">.&lt;/span>decode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>), &lt;span style="color:#e6db74">&amp;#34;html.parser&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tags &lt;span style="color:#f92672">=&lt;/span> soup&lt;span style="color:#f92672">.&lt;/span>findAll(&lt;span style="color:#e6db74">&amp;#39;a&amp;#39;&lt;/span>, {&lt;span style="color:#e6db74">&amp;#39;class&amp;#39;&lt;/span>: {&lt;span style="color:#e6db74">&amp;#39;main&amp;#39;&lt;/span>}})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> urls &lt;span style="color:#f92672">=&lt;/span> [v &lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> tags &lt;span style="color:#66d9ef">if&lt;/span> v[&lt;span style="color:#e6db74">&amp;#39;href&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>find(&lt;span style="color:#e6db74">&amp;#39;/monthly/&amp;#39;&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> [(str(v&lt;span style="color:#f92672">.&lt;/span>string)&lt;span style="color:#f92672">.&lt;/span>strip(), prefix &lt;span style="color:#f92672">+&lt;/span> v[&lt;span style="color:#e6db74">&amp;#39;href&amp;#39;&lt;/span>]) &lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> urls]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 获取所有文章名、URL和对应的月报链接（文章类型，文章名，url，月报名，url）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">query_all_name_url&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> monthly_urls &lt;span style="color:#f92672">=&lt;/span> query_monthly_url()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> data1 &lt;span style="color:#f92672">in&lt;/span> monthly_urls:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name_urls &lt;span style="color:#f92672">=&lt;/span> query_name_url(data1[&lt;span style="color:#ae81ff">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> data2 &lt;span style="color:#f92672">in&lt;/span> name_urls:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result&lt;span style="color:#f92672">.&lt;/span>append((data2[&lt;span style="color:#ae81ff">0&lt;/span>][&lt;span style="color:#ae81ff">0&lt;/span>:data2[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>find(&lt;span style="color:#e6db74">&amp;#39;·&amp;#39;&lt;/span>)]&lt;span style="color:#f92672">.&lt;/span>strip(), data2[&lt;span style="color:#ae81ff">0&lt;/span>], data2[&lt;span style="color:#ae81ff">1&lt;/span>], data1[&lt;span style="color:#ae81ff">0&lt;/span>], data1[&lt;span style="color:#ae81ff">1&lt;/span>]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 下载所有数据库月报，并按照类别进行分类，写入到mysql.md文件中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result &lt;span style="color:#f92672">=&lt;/span> query_all_name_url()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result&lt;span style="color:#f92672">.&lt;/span>sort(key&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">lambda&lt;/span> v: v[&lt;span style="color:#ae81ff">0&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> result:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> v[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">!=&lt;/span> name:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> v[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;## &lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(v[&lt;span style="color:#ae81ff">0&lt;/span>]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;[&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">](&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">) [[&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">](&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">)]&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(v[&lt;span style="color:#ae81ff">1&lt;/span>], v[&lt;span style="color:#ae81ff">2&lt;/span>], v[&lt;span style="color:#ae81ff">3&lt;/span>][v[&lt;span style="color:#ae81ff">3&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>find(&lt;span style="color:#e6db74">&amp;#39; － &amp;#39;&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>:], v[&lt;span style="color:#ae81ff">4&lt;/span>]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;mysql.md&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;w&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> file:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> data:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(v)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file&lt;span style="color:#f92672">.&lt;/span>write(v &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>15445课程笔记</title><link>https://askyx.github.io/posts/course/15445/note/</link><pubDate>Fri, 10 Jun 2022 11:07:10 +0800</pubDate><guid>https://askyx.github.io/posts/course/15445/note/</guid><description>&lt;p>&lt;a href="https://15445.courses.cs.cmu.edu/fall2021/notes/02-advancedsql.pdf" target="_blank">https://15445.courses.cs.cmu.edu/fall2021/notes/02-advancedsql.pdf&lt;/a>
&lt;/p>
&lt;ul>
&lt;li>output control
控制输出结果，例如order，limit等&lt;/li>
&lt;li>窗口函数&lt;/li>
&lt;li>CTE
Common Table Expressions，把一个语句的输出视为一张临时表参与下面的语句的运算
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">WITH&lt;/span> cte1 (col1) &lt;span style="color:#66d9ef">AS&lt;/span> (&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>), cte2 (col2) &lt;span style="color:#66d9ef">AS&lt;/span> (&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> cte1, cte2;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="database-storage">Database Storage&lt;/h3>
&lt;ul>
&lt;li>数据库的存储介质当前还是磁盘，IO慢&lt;/li>
&lt;li>数据库存储要点之一是使用缓存维护数据在磁盘和内存之间的数据交换，以实现数据的快速读写&lt;/li>
&lt;li>顺序读写和随机读写
&lt;ol>
&lt;li>顺序读写的意思是需要定位到读写的位置才能操作，例如链表。&lt;/li>
&lt;li>随机读写的意思是可以直接定位到读写的位置，例如数组。&lt;/li>
&lt;li>由于磁盘上随机读写速度不如顺序读写，所以当前数据库还是需要想办法使用顺序读写，例如LSM，GFS等架构都是因为这个原因导致的&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3 id="磁盘和内存中数据的组织格式">磁盘和内存中数据的组织格式&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>数据全部在磁盘上，按page组织数据，内存中使用buffer pool维护缓存，磁盘中有一个page专门维护page的位置信息，使用的时候先读取此page到内存，然后
然后读取其他page到buffer pool，使用buffer pool维护page的置换情况，例如LRU，或者其他算法&lt;br>
可以参考lab1和slide，还是比较明显的&lt;br>
buffer pool中的page可以用于上层的数据运算&lt;/p></description></item><item><title>Raft</title><link>https://askyx.github.io/posts/course/6.824/raft/</link><pubDate>Mon, 30 May 2022 18:51:02 +0800</pubDate><guid>https://askyx.github.io/posts/course/6.824/raft/</guid><description>&lt;blockquote>
 &lt;ul>
&lt;li>&lt;a href="https://college.blog.csdn.net/article/details/53671783?spm=1001.2101.3001.6650.4&amp;amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-4-53671783-blog-42742105.pc_relevant_paycolumn_v3&amp;amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-4-53671783-blog-42742105.pc_relevant_paycolumn_v3&amp;amp;utm_relevant_index=8" target="_blank">译文&lt;/a>
&lt;/li>
&lt;li>&lt;a href="https://pdos.csail.mit.edu/6.824/papers/raft-extended.pdf" target="_blank">原文&lt;/a>
&lt;/li>
&lt;li>&lt;a href="https://hardcore.feishu.cn/docs/doccnMRVFcMWn1zsEYBrbsDf8De#" target="_blank">有用的飞书文档&lt;/a>
&lt;/li>
&lt;/ul>
 &lt;/blockquote>

&lt;ul>
&lt;li>和其他的算法相比
&lt;ol>
&lt;li>Strong leader&lt;br>
日志只能从领导者发送到其他节点&lt;/li>
&lt;li>Leader election&lt;br>
随机计时器选举领导，在心跳机制上加上一些额外的工作&lt;/li>
&lt;li>Membership changes&lt;br>
角色变换&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h2 id="replicated-state-machines">Replicated state machines&lt;/h2>
&lt;p>复制状态机一般基于日志实现，通俗的理解只要所有的机器按照相同的顺序执行指令，那么每个节点的状态都是确定的，所以需要把指令日志复制到其他节点上去，这就是一致性算法的工作&lt;/p></description></item><item><title>GFS</title><link>https://askyx.github.io/posts/course/6.824/gfs/</link><pubDate>Mon, 30 May 2022 16:36:40 +0800</pubDate><guid>https://askyx.github.io/posts/course/6.824/gfs/</guid><description>&lt;p>GFS是一个大规模可扩展的可容错的分布式文件系统。Google三大篇论文之一&lt;/p>



 &lt;blockquote>
 &lt;p>翻译文章在&lt;a href="https://nxwz51a5wp.feishu.cn/docs/doccnNYeo3oXj6cWohseo6yB4id#Tar9b7" target="_blank">这里&lt;/a>
&lt;br>
论文在&lt;a href="https://pdos.csail.mit.edu/6.824/papers/gfs.pdf" target="_blank">这里&lt;/a>
&lt;br>
&lt;a href="https://pdos.csail.mit.edu/6.824/papers/gfs-faq.txt" target="_blank">6.824 Q&amp;amp;A&lt;/a>
&lt;/p>
 &lt;/blockquote>

&lt;ul>
&lt;li>GFS的特点
&lt;ol>
&lt;li>运行在廉价的机器上，节约成本&lt;/li>
&lt;li>灵活性强，可随意扩展，容错性强&lt;/li>
&lt;li>文件尾部追加数据，不会有太多的数据变动&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h2 id="架构">架构&lt;/h2>
&lt;p>一个单独的master节点和多个datachunk节点，maste管理元数据信息，包括chunkhandle信息，文件和chunk的映射信息，以及chunkserver的变动信息等。master使用心跳定时和chunkserver同步关键信息。使用单个master的目的是为了简化设计，同时为了避免单点故障，master节点每次操作都和backup master同步数据，master存储的3种关键元数据为&lt;/p></description></item><item><title>Mapreduce</title><link>https://askyx.github.io/posts/course/6.824/mapreduce/</link><pubDate>Sun, 29 May 2022 21:05:46 +0800</pubDate><guid>https://askyx.github.io/posts/course/6.824/mapreduce/</guid><description>&lt;p>利用普通机器组成的大规模计算集群进行并行的,高容错,高性能的数据处理函数框架&lt;/p>
&lt;p>原始论文点&lt;a href="https://pdos.csail.mit.edu/6.824/papers/mapreduce.pdf" target="_blank">这里&lt;/a>
,论文翻译点&lt;a href="https://hardcore.feishu.cn/docs/doccn1XcAYOjDLG7PtY3DIh0q4d#kv8eLv" target="_blank">这里&lt;/a>
，有时间的话，自行对比翻译和原文&lt;/p>
&lt;p>最终实现的目标是&amp;ndash;实现一个分布式系统，对程序员隐藏底层分布式细节，程序员只需要定义map和reduce 函数即可。&lt;/p></description></item><item><title>Coursenote</title><link>https://askyx.github.io/posts/course/6.824/coursenote/</link><pubDate>Tue, 17 May 2022 13:17:04 +0800</pubDate><guid>https://askyx.github.io/posts/course/6.824/coursenote/</guid><description>&lt;h2 id="随堂笔记">随堂笔记&lt;/h2>
&lt;p>Why do people build distributed systems?
to increase capacity via parallel processing
to tolerate faults via replication
to match distribution of physical devices e.g. sensors
to achieve security via isolation&lt;/p>
&lt;p>分布式的困难点：&lt;/p>
&lt;ol>
&lt;li>大量的并发操作&lt;/li>
&lt;li>具有容错性&lt;/li>
&lt;li>难于实现&lt;/li>
&lt;/ol>
&lt;p>Lab 1: distributed big-data framework (like MapReduce)
Lab 2: fault tolerance library using replication (Raft)
Lab 3: a simple fault-tolerant database
Lab 4: scalable database performance via sharding&lt;/p></description></item><item><title>LevelDB源码阅读</title><link>https://askyx.github.io/posts/readbooks/leveldb/</link><pubDate>Sun, 15 May 2022 21:59:53 +0800</pubDate><guid>https://askyx.github.io/posts/readbooks/leveldb/</guid><description>&lt;hr>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>LevelDB: version &lt;span style="color:#ae81ff">1.23&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Date: Thu Oct &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>&lt;span style="color:#f92672">:&lt;/span>&lt;span style="color:#ae81ff">47&lt;/span> &lt;span style="color:#ae81ff">2022&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CPU: &lt;span style="color:#ae81ff">16&lt;/span> &lt;span style="color:#f92672">*&lt;/span> AMD Ryzen &lt;span style="color:#ae81ff">9&lt;/span> &lt;span style="color:#ae81ff">5900&lt;/span>HS with Radeon Graphics
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CPUCache: &lt;span style="color:#ae81ff">512&lt;/span> KB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Keys: &lt;span style="color:#ae81ff">16&lt;/span> bytes each
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Values: &lt;span style="color:#ae81ff">100&lt;/span> bytes each (&lt;span style="color:#ae81ff">50&lt;/span> bytes after compression)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Entries: &lt;span style="color:#ae81ff">1000000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RawSize: &lt;span style="color:#ae81ff">110.6&lt;/span> MB (estimated)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FileSize: &lt;span style="color:#ae81ff">62.9&lt;/span> MB (estimated)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">------------------------------------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fillseq : &lt;span style="color:#ae81ff">1.394&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; &lt;span style="color:#ae81ff">79.3&lt;/span> MB&lt;span style="color:#f92672">/&lt;/span>s 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fillsync : &lt;span style="color:#ae81ff">1208.178&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; &lt;span style="color:#ae81ff">0.1&lt;/span> MB&lt;span style="color:#f92672">/&lt;/span>s (&lt;span style="color:#ae81ff">1000&lt;/span> ops)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fillrandom : &lt;span style="color:#ae81ff">1.948&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; &lt;span style="color:#ae81ff">56.8&lt;/span> MB&lt;span style="color:#f92672">/&lt;/span>s 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>overwrite : &lt;span style="color:#ae81ff">2.448&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; &lt;span style="color:#ae81ff">45.2&lt;/span> MB&lt;span style="color:#f92672">/&lt;/span>s 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>readrandom : &lt;span style="color:#ae81ff">3.251&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; (&lt;span style="color:#ae81ff">864322&lt;/span> of &lt;span style="color:#ae81ff">1000000&lt;/span> found)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>readrandom : &lt;span style="color:#ae81ff">2.947&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; (&lt;span style="color:#ae81ff">864083&lt;/span> of &lt;span style="color:#ae81ff">1000000&lt;/span> found)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>readseq : &lt;span style="color:#ae81ff">0.126&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; &lt;span style="color:#ae81ff">878.1&lt;/span> MB&lt;span style="color:#f92672">/&lt;/span>s 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>readreverse : &lt;span style="color:#ae81ff">0.216&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; &lt;span style="color:#ae81ff">511.4&lt;/span> MB&lt;span style="color:#f92672">/&lt;/span>s 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>compact : &lt;span style="color:#ae81ff">473557.000&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>readrandom : &lt;span style="color:#ae81ff">2.174&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; (&lt;span style="color:#ae81ff">864105&lt;/span> of &lt;span style="color:#ae81ff">1000000&lt;/span> found)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>readseq : &lt;span style="color:#ae81ff">0.111&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; &lt;span style="color:#ae81ff">997.1&lt;/span> MB&lt;span style="color:#f92672">/&lt;/span>s 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>readreverse : &lt;span style="color:#ae81ff">0.185&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; &lt;span style="color:#ae81ff">598.0&lt;/span> MB&lt;span style="color:#f92672">/&lt;/span>s 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fill100K : &lt;span style="color:#ae81ff">530.603&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; &lt;span style="color:#ae81ff">179.8&lt;/span> MB&lt;span style="color:#f92672">/&lt;/span>s (&lt;span style="color:#ae81ff">1000&lt;/span> ops)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>crc32c : &lt;span style="color:#ae81ff">0.904&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; &lt;span style="color:#ae81ff">4322.1&lt;/span> MB&lt;span style="color:#f92672">/&lt;/span>s (&lt;span style="color:#ae81ff">4&lt;/span>K per op)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snappycomp : &lt;span style="color:#ae81ff">2.353&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; &lt;span style="color:#ae81ff">1659.9&lt;/span> MB&lt;span style="color:#f92672">/&lt;/span>s (output: &lt;span style="color:#ae81ff">55.1&lt;/span>&lt;span style="color:#f92672">%&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>snappyuncomp : &lt;span style="color:#ae81ff">0.390&lt;/span> micros&lt;span style="color:#f92672">/&lt;/span>op; &lt;span style="color:#ae81ff">10026.4&lt;/span> MB&lt;span style="color:#f92672">/&lt;/span>s 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;pre>&lt;code>read: d019e3605f222ebc5a3a2484a2cb29db537551dd
&lt;/code>&lt;/pre>
&lt;p>小且完整的工业存储实现，其中有许多细节是可以借鉴的。这里没有完整的深入每一行代码，后续会时不时的慢慢补充&lt;/p></description></item><item><title>VolcanoOptimizer</title><link>https://askyx.github.io/posts/readbooks/volcanooptimizer/</link><pubDate>Mon, 04 Apr 2022 22:10:50 +0800</pubDate><guid>https://askyx.github.io/posts/readbooks/volcanooptimizer/</guid><description>&lt;h1 id="note">NOTE&lt;/h1>
&lt;p>论文阅读笔记&lt;a href="http://www.cse.iitb.ac.in/infolab/Data/Courses/CS632/Papers/Volcano-graefe.pdf" target="_blank">The Volcano Optimizer Generator: Extensibility and Efficient Search&lt;/a>
&lt;/p>
&lt;ul>
&lt;li>
&lt;p>可扩展&lt;/p>
&lt;/li>
&lt;li>
&lt;p>面向对象&lt;/p>
&lt;/li>
&lt;li>
&lt;p>自顶向下&lt;/p>
&lt;/li>
&lt;li>
&lt;p>剪枝&lt;/p>
&lt;/li>
&lt;li>
&lt;p>原型是EXODUS， Volcano是对他的改进&lt;/p>
&lt;ul>
&lt;li>可以单独使用的优化器&lt;/li>
&lt;li>优化搜索时间和搜索空间&lt;/li>
&lt;li>可扩展&lt;/li>
&lt;li>可以使用启发式算法和有效的代价模型来扩展和减少搜索空间，【剪枝】&lt;/li>
&lt;li>灵活的成本计算模型&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>一个框架，优化器生成器，可以由“optimizer implementor”自行实现关键函数，整个优化器框架的输入是AST，输出是一个执行计划，算子的集合&lt;/p></description></item><item><title>Columbia Optimizer</title><link>https://askyx.github.io/posts/readbooks/columbia-optimizer/</link><pubDate>Sat, 02 Apr 2022 16:55:12 +0800</pubDate><guid>https://askyx.github.io/posts/readbooks/columbia-optimizer/</guid><description>&lt;h1 id="start">start&lt;/h1>
&lt;p>EFFICIENCY IN THE COLUMBIA DATABASE QUERY OPTIMIZER&lt;/p>
&lt;h2 id="优化器发展版本">优化器发展版本&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>第一代&lt;/p>
&lt;ul>
&lt;li>模块化的，分层的，可扩展的，基于规则的优化器&lt;/li>
&lt;li>扩展的复杂性，搜索性能&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>第二代&lt;/p>
&lt;ul>
&lt;li>类似Volcano，更加优秀的优化规则，且使用物理属性参与优化，使用新的搜索方式&lt;/li>
&lt;li>更加灵活，但是还是难与扩展&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>第三代&lt;/p></description></item><item><title>现代C++白皮书</title><link>https://askyx.github.io/posts/readbooks/%E7%8E%B0%E4%BB%A3c++%E7%99%BD%E7%9A%AE%E4%B9%A6/</link><pubDate>Sun, 06 Mar 2022 20:46:08 +0800</pubDate><guid>https://askyx.github.io/posts/readbooks/%E7%8E%B0%E4%BB%A3c++%E7%99%BD%E7%9A%AE%E4%B9%A6/</guid><description>&lt;h2 id="读者序">读者序&lt;/h2>
&lt;p>之前没有好好的阅读过一本任何技术书籍，一般都是打开前几张，然后慢慢的失去耐心，所有造成的问题是一些书籍上的知识，只会对前面的章节有记忆，而大多数的书籍前面的章节也只是他书籍的入门介绍而已，所以我是个半吊子程序员，工作两年半之后，这个问题越来越困扰着我，有时候看见别人的面帖，感觉那些问题其实都因该是知道答案的，但是当我想要在脑海中把答案整理出来的时候却无从说起，简单的来说就是有的东西我是知道的，但是无法表示出来，不成体系，这给我一个错觉就是我感觉我能力可以，但是落到实地的时候却啥也做不了，脱离了谷歌百度或者其他我之前的资料，我啥都不行。&lt;/p></description></item><item><title>Envs</title><link>https://askyx.github.io/posts/others/envs/</link><pubDate>Mon, 21 Feb 2022 19:00:25 +0800</pubDate><guid>https://askyx.github.io/posts/others/envs/</guid><description>&lt;h2 id="hugo">hugo&lt;/h2>
&lt;p>wget &lt;a href="https://github.com/gohugoio/hugo/releases/download/v0.92.1/hugo_0.92.1_Linux-64bit.deb" target="_blank">https://github.com/gohugoio/hugo/releases/download/v0.92.1/hugo_0.92.1_Linux-64bit.deb&lt;/a>

&lt;a href="https://github.91chi.fun/https://github.com//gohugoio/hugo/releases/download/v0.92.2/hugo_extended_0.92.2_Linux-64bit.deb" target="_blank">https://github.91chi.fun/https://github.com//gohugoio/hugo/releases/download/v0.92.2/hugo_extended_0.92.2_Linux-64bit.deb&lt;/a>

sudo dpkg -i hugo*.deb&lt;/p>
&lt;p>140.82.113.3&lt;/p>
&lt;p>aria2c -s 5 &lt;a href="https://github.com/gohugoio/hugo/releases/download/v0.92.1/hugo_0.92.1_Linux-64bit.deb" target="_blank">https://github.com/gohugoio/hugo/releases/download/v0.92.1/hugo_0.92.1_Linux-64bit.deb&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://github.com/gohugoio/hugo/releases/download/v0.92.1/hugo_0.92.1_Linux-64bit.deb" target="_blank">https://github.com/gohugoio/hugo/releases/download/v0.92.1/hugo_0.92.1_Linux-64bit.deb&lt;/a>
&lt;/p>
&lt;p>可以使用aria2下载，ubuntu使用&lt;code>apt install aria2&lt;/code>直接安装工具，使用-s开启多路下载
aria2c -s 5 &lt;a href="https://github.com/gohugoio/hugo/releases/download/v0.92.1/hugo_0.92.1_Linux-64bit.deb" target="_blank">https://github.com/gohugoio/hugo/releases/download/v0.92.1/hugo_0.92.1_Linux-64bit.deb&lt;/a>
&lt;/p>
&lt;p>manager用户&lt;/p>
&lt;p>&lt;a href="https://www.jianshu.com/p/a76a93e8c662" target="_blank">https://www.jianshu.com/p/a76a93e8c662&lt;/a>
&lt;/p>
&lt;h2 id="unix">Unix&lt;/h2>
&lt;p>分区问题，集群上多块磁盘分区挂载到指定目录&lt;/p></description></item><item><title>Docker</title><link>https://askyx.github.io/posts/others/docker/</link><pubDate>Sun, 20 Feb 2022 21:17:58 +0800</pubDate><guid>https://askyx.github.io/posts/others/docker/</guid><description>&lt;h2 id="基础概念">基础概念&lt;/h2>
&lt;p>Docker使用go开发的一种沙箱工具，他使得应用可以单独运行在沙箱中，通过端口映射或者volumes与外界进行交互。这可以让一个机器上可以运行多种不同环境的应用且互不干扰，例如一个比较大型的引用，使用的此方式单独维护一个模块，使得系统的可靠性大大增强&lt;/p></description></item><item><title/><link>https://askyx.github.io/posts/others/%E5%87%BD%E6%95%B0%E8%BF%90%E8%A1%8C%E9%80%BB%E8%BE%91/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://askyx.github.io/posts/others/%E5%87%BD%E6%95%B0%E8%BF%90%E8%A1%8C%E9%80%BB%E8%BE%91/</guid><description>&lt;p>predicate_refuted_by 和 make_new_qual_list的运行逻辑以及PARAM 无法选出一个节点的原因&lt;/p>
&lt;p>make_new_qual_list需要使用表达式和分区信息构造新的表达式，但是PARAM不是常量，所以无法构造，
所以predicate_refuted_by判定变大时和约束的时候无法正确的选择节点，动态语句只要使用到分区键都不行&lt;/p></description></item><item><title/><link>https://askyx.github.io/posts/personal/%E7%AE%80%E5%8E%86/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://askyx.github.io/posts/personal/%E7%AE%80%E5%8E%86/</guid><description>&lt;h1 id="文磊">文磊&lt;/h1>
&lt;h2 id="个人信息">个人信息&lt;/h2>
&lt;p>性 别：男 																									年 龄：29
手 机：18705169510 																					邮 箱：404061090@qq.com&lt;/p>
&lt;h2 id="工作及教育经历">工作及教育经历&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>湖南亚信安慧科技有限公司 2022.7~now AntDB-T SQL内核研发工程师&lt;/p>
&lt;ul>
&lt;li>主要负责优化器对分布式执行计划的优化&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>星环科技有限公司 2022.2~2022.3 基础架构部-数据库研发工程师&lt;/p></description></item><item><title/><link>https://askyx.github.io/posts/postgres/adb_cluster_plan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://askyx.github.io/posts/postgres/adb_cluster_plan/</guid><description>&lt;h1 id="执行计划">执行计划&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">set&lt;/span> enable_mergejoin&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">off&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">set&lt;/span> enable_nestloop&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">off&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_acctbal,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_name,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n_name,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p_partkey,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p_mfgr,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_address,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_phone,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_comment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">from&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> part,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> supplier,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> partsupp,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nation,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">where&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p_partkey &lt;span style="color:#f92672">=&lt;/span> ps_partkey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">and&lt;/span> s_suppkey &lt;span style="color:#f92672">=&lt;/span> ps_suppkey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">and&lt;/span> p_size &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">and&lt;/span> p_type &lt;span style="color:#66d9ef">like&lt;/span> &lt;span style="color:#e6db74">&amp;#39;%BRASS&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">and&lt;/span> s_nationkey &lt;span style="color:#f92672">=&lt;/span> n_nationkey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">and&lt;/span> n_regionkey &lt;span style="color:#f92672">=&lt;/span> r_regionkey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">and&lt;/span> r_name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;EUROPE&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">and&lt;/span> ps_supplycost &lt;span style="color:#f92672">=&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">select&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">min&lt;/span>(ps_supplycost)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">from&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> partsupp,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> supplier,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> nation,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> region
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">where&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p_partkey &lt;span style="color:#f92672">=&lt;/span> ps_partkey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">and&lt;/span> s_suppkey &lt;span style="color:#f92672">=&lt;/span> ps_suppkey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">and&lt;/span> s_nationkey &lt;span style="color:#f92672">=&lt;/span> n_nationkey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">and&lt;/span> n_regionkey &lt;span style="color:#f92672">=&lt;/span> r_regionkey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">and&lt;/span> r_name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;EUROPE&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">order&lt;/span> &lt;span style="color:#66d9ef">by&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_acctbal &lt;span style="color:#66d9ef">desc&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> n_name,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_name,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> p_partkey &lt;span style="color:#66d9ef">limit&lt;/span> &lt;span style="color:#ae81ff">100&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> QUERY PLAN 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-----------------------------------------------------------------------------------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">Limit&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3351813&lt;/span>.&lt;span style="color:#ae81ff">70&lt;/span>..&lt;span style="color:#ae81ff">3351813&lt;/span>.&lt;span style="color:#ae81ff">71&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">Cluster&lt;/span> Merge Gather (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3351813&lt;/span>.&lt;span style="color:#ae81ff">70&lt;/span>..&lt;span style="color:#ae81ff">3351813&lt;/span>.&lt;span style="color:#ae81ff">71&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sort &lt;span style="color:#66d9ef">Key&lt;/span>: supplier.s_acctbal &lt;span style="color:#66d9ef">DESC&lt;/span>, nation.n_name, supplier.s_name, part.p_partkey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">Limit&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3350813&lt;/span>.&lt;span style="color:#ae81ff">60&lt;/span>..&lt;span style="color:#ae81ff">3350813&lt;/span>.&lt;span style="color:#ae81ff">61&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">193&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Sort (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3350813&lt;/span>.&lt;span style="color:#ae81ff">60&lt;/span>..&lt;span style="color:#ae81ff">3350813&lt;/span>.&lt;span style="color:#ae81ff">61&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">193&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sort &lt;span style="color:#66d9ef">Key&lt;/span>: supplier.s_acctbal &lt;span style="color:#66d9ef">DESC&lt;/span>, nation.n_name, supplier.s_name, part.p_partkey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">745359&lt;/span>.&lt;span style="color:#ae81ff">38&lt;/span>..&lt;span style="color:#ae81ff">3350813&lt;/span>.&lt;span style="color:#ae81ff">59&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">193&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: ((partsupp.ps_partkey &lt;span style="color:#f92672">=&lt;/span> part.p_partkey) &lt;span style="color:#66d9ef">AND&lt;/span> (partsupp.ps_supplycost &lt;span style="color:#f92672">=&lt;/span> (SubPlan &lt;span style="color:#ae81ff">1&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">35483&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span>..&lt;span style="color:#ae81ff">2640803&lt;/span>.&lt;span style="color:#ae81ff">16&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">25603&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">173&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: (partsupp.ps_suppkey &lt;span style="color:#f92672">=&lt;/span> supplier.s_suppkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> partsupp (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">2544033&lt;/span>.&lt;span style="color:#ae81ff">48&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">16001650&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">14&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">35383&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span>..&lt;span style="color:#ae81ff">35383&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8000&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">167&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">Cluster&lt;/span> Reduce (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span>..&lt;span style="color:#ae81ff">35383&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8000&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">167&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span>..&lt;span style="color:#ae81ff">33012&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1600&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">167&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: (supplier.s_nationkey &lt;span style="color:#f92672">=&lt;/span> nation.n_nationkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> supplier (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">32180&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">200000&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">145&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>.&lt;span style="color:#ae81ff">35&lt;/span>..&lt;span style="color:#ae81ff">2&lt;/span>.&lt;span style="color:#ae81ff">35&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">30&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>.&lt;span style="color:#ae81ff">07&lt;/span>..&lt;span style="color:#ae81ff">2&lt;/span>.&lt;span style="color:#ae81ff">35&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">30&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: (nation.n_regionkey &lt;span style="color:#f92672">=&lt;/span> region.r_regionkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> nation (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">1&lt;/span>.&lt;span style="color:#ae81ff">25&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">34&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>.&lt;span style="color:#ae81ff">06&lt;/span>..&lt;span style="color:#ae81ff">1&lt;/span>.&lt;span style="color:#ae81ff">06&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> region (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">1&lt;/span>.&lt;span style="color:#ae81ff">06&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filter: (r_name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;EUROPE&amp;#39;&lt;/span>::bpchar)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">709609&lt;/span>.&lt;span style="color:#ae81ff">29&lt;/span>..&lt;span style="color:#ae81ff">709609&lt;/span>.&lt;span style="color:#ae81ff">29&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">17782&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">30&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> part (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">709609&lt;/span>.&lt;span style="color:#ae81ff">29&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">17782&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">30&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filter: (((p_type)::text &lt;span style="color:#f92672">~~&lt;/span> &lt;span style="color:#e6db74">&amp;#39;%BRASS&amp;#39;&lt;/span>::text) &lt;span style="color:#66d9ef">AND&lt;/span> (p_size &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SubPlan &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Materialize (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">28851255&lt;/span>.&lt;span style="color:#ae81ff">69&lt;/span>..&lt;span style="color:#ae81ff">28851255&lt;/span>.&lt;span style="color:#ae81ff">71&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">Aggregate&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">28851255&lt;/span>.&lt;span style="color:#ae81ff">69&lt;/span>..&lt;span style="color:#ae81ff">28851255&lt;/span>.&lt;span style="color:#ae81ff">70&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">35610&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span>..&lt;span style="color:#ae81ff">28851255&lt;/span>.&lt;span style="color:#ae81ff">69&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">6&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: (partsupp_1.ps_suppkey &lt;span style="color:#f92672">=&lt;/span> supplier_1.s_suppkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Reduce Scan (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">28509214&lt;/span>.&lt;span style="color:#ae81ff">73&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">80008250&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filter: (part.p_partkey &lt;span style="color:#f92672">=&lt;/span> ps_partkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">Cluster&lt;/span> Reduce (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">27718507&lt;/span>.&lt;span style="color:#ae81ff">48&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">80008250&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">14&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> partsupp partsupp_1 (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">2544033&lt;/span>.&lt;span style="color:#ae81ff">48&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">16001650&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">14&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">35509&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span>..&lt;span style="color:#ae81ff">35509&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8000&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">Cluster&lt;/span> Reduce (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span>..&lt;span style="color:#ae81ff">35509&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8000&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span>..&lt;span style="color:#ae81ff">33012&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1600&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: (supplier_1.s_nationkey &lt;span style="color:#f92672">=&lt;/span> nation_1.n_nationkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> supplier supplier_1 (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">32180&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">200000&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>.&lt;span style="color:#ae81ff">35&lt;/span>..&lt;span style="color:#ae81ff">2&lt;/span>.&lt;span style="color:#ae81ff">35&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>.&lt;span style="color:#ae81ff">07&lt;/span>..&lt;span style="color:#ae81ff">2&lt;/span>.&lt;span style="color:#ae81ff">35&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: (nation_1.n_regionkey &lt;span style="color:#f92672">=&lt;/span> region_1.r_regionkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> nation nation_1 (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">1&lt;/span>.&lt;span style="color:#ae81ff">25&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>.&lt;span style="color:#ae81ff">06&lt;/span>..&lt;span style="color:#ae81ff">1&lt;/span>.&lt;span style="color:#ae81ff">06&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> region region_1 (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">1&lt;/span>.&lt;span style="color:#ae81ff">06&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filter: (r_name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;EUROPE&amp;#39;&lt;/span>::bpchar)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">47&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> QUERY PLAN
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-----------------------------------------------------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">Limit&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">85&lt;/span>.&lt;span style="color:#ae81ff">86&lt;/span>..&lt;span style="color:#ae81ff">85&lt;/span>.&lt;span style="color:#ae81ff">87&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">716&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Sort (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">85&lt;/span>.&lt;span style="color:#ae81ff">86&lt;/span>..&lt;span style="color:#ae81ff">85&lt;/span>.&lt;span style="color:#ae81ff">87&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">716&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Sort &lt;span style="color:#66d9ef">Key&lt;/span>: supplier.s_acctbal &lt;span style="color:#66d9ef">DESC&lt;/span>, nation.n_name, supplier.s_name, part.p_partkey
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">48&lt;/span>.&lt;span style="color:#ae81ff">95&lt;/span>..&lt;span style="color:#ae81ff">85&lt;/span>.&lt;span style="color:#ae81ff">73&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">716&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: ((part.p_partkey &lt;span style="color:#f92672">=&lt;/span> partsupp.ps_partkey) &lt;span style="color:#66d9ef">AND&lt;/span> ((SubPlan &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">=&lt;/span> partsupp.ps_supplycost))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> part (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">12&lt;/span>.&lt;span style="color:#ae81ff">40&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">108&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filter: (((p_type)::text &lt;span style="color:#f92672">~~&lt;/span> &lt;span style="color:#e6db74">&amp;#39;%BRASS&amp;#39;&lt;/span>::text) &lt;span style="color:#66d9ef">AND&lt;/span> (p_size &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">15&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">48&lt;/span>.&lt;span style="color:#ae81ff">93&lt;/span>..&lt;span style="color:#ae81ff">48&lt;/span>.&lt;span style="color:#ae81ff">93&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">630&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">36&lt;/span>.&lt;span style="color:#ae81ff">58&lt;/span>..&lt;span style="color:#ae81ff">48&lt;/span>.&lt;span style="color:#ae81ff">93&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">630&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: (partsupp.ps_suppkey &lt;span style="color:#f92672">=&lt;/span> supplier.s_suppkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> partsupp (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">11&lt;/span>.&lt;span style="color:#ae81ff">70&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">170&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">26&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">36&lt;/span>.&lt;span style="color:#ae81ff">57&lt;/span>..&lt;span style="color:#ae81ff">36&lt;/span>.&lt;span style="color:#ae81ff">57&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">612&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">24&lt;/span>.&lt;span style="color:#ae81ff">50&lt;/span>..&lt;span style="color:#ae81ff">36&lt;/span>.&lt;span style="color:#ae81ff">57&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">612&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: (supplier.s_nationkey &lt;span style="color:#f92672">=&lt;/span> nation.n_nationkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> supplier (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">11&lt;/span>.&lt;span style="color:#ae81ff">50&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">150&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">512&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">24&lt;/span>.&lt;span style="color:#ae81ff">48&lt;/span>..&lt;span style="color:#ae81ff">24&lt;/span>.&lt;span style="color:#ae81ff">48&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">108&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>.&lt;span style="color:#ae81ff">14&lt;/span>..&lt;span style="color:#ae81ff">24&lt;/span>.&lt;span style="color:#ae81ff">48&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">108&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: (nation.n_regionkey &lt;span style="color:#f92672">=&lt;/span> region.r_regionkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> nation (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">11&lt;/span>.&lt;span style="color:#ae81ff">70&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">170&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">112&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>.&lt;span style="color:#ae81ff">12&lt;/span>..&lt;span style="color:#ae81ff">12&lt;/span>.&lt;span style="color:#ae81ff">12&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> region (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">12&lt;/span>.&lt;span style="color:#ae81ff">12&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filter: (r_name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;EUROPE&amp;#39;&lt;/span>::bpchar)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SubPlan &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">Aggregate&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">48&lt;/span>.&lt;span style="color:#ae81ff">72&lt;/span>..&lt;span style="color:#ae81ff">48&lt;/span>.&lt;span style="color:#ae81ff">73&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">32&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">36&lt;/span>.&lt;span style="color:#ae81ff">36&lt;/span>..&lt;span style="color:#ae81ff">48&lt;/span>.&lt;span style="color:#ae81ff">72&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">18&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: (nation_1.n_regionkey &lt;span style="color:#f92672">=&lt;/span> region_1.r_regionkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">24&lt;/span>.&lt;span style="color:#ae81ff">22&lt;/span>..&lt;span style="color:#ae81ff">36&lt;/span>.&lt;span style="color:#ae81ff">57&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">22&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: (nation_1.n_nationkey &lt;span style="color:#f92672">=&lt;/span> supplier_1.s_nationkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> nation nation_1 (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">11&lt;/span>.&lt;span style="color:#ae81ff">70&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">170&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">24&lt;/span>.&lt;span style="color:#ae81ff">21&lt;/span>..&lt;span style="color:#ae81ff">24&lt;/span>.&lt;span style="color:#ae81ff">21&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">22&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash &lt;span style="color:#66d9ef">Join&lt;/span> (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>.&lt;span style="color:#ae81ff">14&lt;/span>..&lt;span style="color:#ae81ff">24&lt;/span>.&lt;span style="color:#ae81ff">21&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">22&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Hash Cond: (supplier_1.s_suppkey &lt;span style="color:#f92672">=&lt;/span> partsupp_1.ps_suppkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> supplier supplier_1 (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">11&lt;/span>.&lt;span style="color:#ae81ff">50&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">150&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>.&lt;span style="color:#ae81ff">12&lt;/span>..&lt;span style="color:#ae81ff">12&lt;/span>.&lt;span style="color:#ae81ff">12&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">22&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> partsupp partsupp_1 (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">12&lt;/span>.&lt;span style="color:#ae81ff">12&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">22&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filter: (part.p_partkey &lt;span style="color:#f92672">=&lt;/span> ps_partkey)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Hash (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">12&lt;/span>.&lt;span style="color:#ae81ff">12&lt;/span>..&lt;span style="color:#ae81ff">12&lt;/span>.&lt;span style="color:#ae81ff">12&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> Seq Scan &lt;span style="color:#66d9ef">on&lt;/span> region region_1 (cost&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>.&lt;span style="color:#ae81ff">00&lt;/span>..&lt;span style="color:#ae81ff">12&lt;/span>.&lt;span style="color:#ae81ff">12&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> width&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Filter: (r_name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;EUROPE&amp;#39;&lt;/span>::bpchar)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#ae81ff">39&lt;/span> &lt;span style="color:#66d9ef">rows&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>pg单机执行计划和antdb分布式执行计划大致一样，和之前gp的结论有&lt;/p></description></item><item><title/><link>https://askyx.github.io/posts/postgres/sublink/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://askyx.github.io/posts/postgres/sublink/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">typedef&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> &lt;span style="color:#a6e22e">SubPlan&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_node_attr(no_query_jumble)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Expr xpr;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Fields copied from original SubLink: */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SubLinkType subLinkType; &lt;span style="color:#75715e">/* see above */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* The combining operators, transformed to an executable expression: */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Node &lt;span style="color:#f92672">*&lt;/span>testexpr; &lt;span style="color:#75715e">/* OpExpr or RowCompareExpr expression tree */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List &lt;span style="color:#f92672">*&lt;/span>paramIds; &lt;span style="color:#75715e">/* IDs of Params embedded in the above */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Identification of the Plan tree to use: */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">int&lt;/span> plan_id; &lt;span style="color:#75715e">/* Index (from 1) in PlannedStmt.subplans */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Identification of the SubPlan for EXPLAIN and debugging purposes: */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>plan_name; &lt;span style="color:#75715e">/* A name assigned during planning */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Extra data useful for determining subplan&amp;#39;s output type: */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Oid firstColType; &lt;span style="color:#75715e">/* Type of first column of subplan result */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> int32 firstColTypmod; &lt;span style="color:#75715e">/* Typmod of first column of subplan result */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Oid firstColCollation; &lt;span style="color:#75715e">/* Collation of first column of subplan result */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Information about execution strategy: */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">bool&lt;/span> useHashTable; &lt;span style="color:#75715e">/* true to store subselect output in a hash table (implies we are doing &amp;#34;IN&amp;#34;) */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">bool&lt;/span> unknownEqFalse; &lt;span style="color:#75715e">/* true if it&amp;#39;s okay to return FALSE when the
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * spec result is UNKNOWN; this allows much
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"> * simpler handling of null values */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">bool&lt;/span> parallel_safe; &lt;span style="color:#75715e">/* is the subplan parallel-safe? */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Note: parallel_safe does not consider contents of testexpr or args */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Information for passing params into and out of the subselect: */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* setParam and parParam are lists of integers (param IDs) */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 如果存在 setParam ，在初始化 SubPlanState 的时候，会把 SubPlanState 添加到 paramid 对应的 prm 中去，在执行的时候，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 遇到 Param 的时候会执行 ExecEvalParamExec 函数，此时由于存在 SubPlanState ，会去执行 ExecSetParamPlan ， 去执行initplan
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 但是 初始化的时候要求 parParam 为 nil， 此时不会设置的 SubPlanState ， ExecEvalParamExec 也不会执行 ExecSetParamPlan ，而是直接获取 prm 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 中 提前设置的值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 在 initplan 执行过之后，会设置 execPlan 为null， 之后直接使用 prm 中得 值即可， 这也代表 init plan 只会返回一行
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> List &lt;span style="color:#f92672">*&lt;/span>setParam; &lt;span style="color:#75715e">/* initplan and MULTIEXPR subqueries have to set these Params for parent plan */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// parParam 和 args 是一一对应的，args 是 Var list，在 ExecScanSubPlan 中， 会使用 args 去 slot 中获取对应的值，
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 然后 使用 parParam 获取对应下标 的 prm， 然后设置值， 此时 parent 参数准备完毕，在后续执行中遇到 Param ， 执行 ExecEvalParamExec 的时候，则直接使用 prm 的值即可， 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// 如果 存在 testexpr ， 则需要 再执行 testexpr ， 否则直接输出 子查询的结果，然后再 执行对应的比较表达式
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> List &lt;span style="color:#f92672">*&lt;/span>parParam; &lt;span style="color:#75715e">/* indices of input Params from parent plan */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List &lt;span style="color:#f92672">*&lt;/span>args; &lt;span style="color:#75715e">/* exprs to pass as parParam values */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Estimated execution costs: */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Cost startup_cost; &lt;span style="color:#75715e">/* one-time setup cost */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Cost per_call_cost; &lt;span style="color:#75715e">/* cost for each subplan evaluation */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>} SubPlan;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>SS_replace_correlation_vars
遍历子查询中的，上层引用，替换为 param ，并且 对应 层级 得 root 的 plan_params 会记录替换的 表达式,&lt;/li>
&lt;/ul>
&lt;p>$150 = [opno: 96, opfuncid: 65, opresulttype: 16, opretset false, opcollid 0, inputcollid 0] = {
args = List with 2 elements = {
0 = [varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varlevelsup: 0, varnosyn: 1, varattnosyn: 1],
1 = [varno: 1, varattno: 1, vartype: 23, vartypmod: -1, varcollid: 0, varlevelsup: 1, varnosyn: 1, varattnosyn: 1]
}
}&lt;/p></description></item><item><title/><link>https://askyx.github.io/posts/static/mysql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://askyx.github.io/posts/static/mysql/</guid><description/></item></channel></rss>