<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>6.824 on Asky</title><link>https://askyx.github.io/tags/6.824/</link><description>Recent content in 6.824 on Asky</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 30 May 2022 18:51:02 +0800</lastBuildDate><atom:link href="https://askyx.github.io/tags/6.824/index.xml" rel="self" type="application/rss+xml"/><item><title>Raft</title><link>https://askyx.github.io/posts/raft/</link><pubDate>Mon, 30 May 2022 18:51:02 +0800</pubDate><guid>https://askyx.github.io/posts/raft/</guid><description>译文 原文 有用的飞书文档 和其他的算法相比 Strong leader 日志只能从领导者发送到其他节点 Leader election 随机计时器选举领导，在心跳机制上加上一些额外的工作 Membership changes 角色变换 Replicated state machines 复制状态机一般基于日志实现，通俗的理解只要所有的机器按照相同的顺序执行指令，那么每个节点的状态都是确定的，所以需要把指令日志复制到其他节</description></item><item><title>GFS</title><link>https://askyx.github.io/posts/gfs/</link><pubDate>Mon, 30 May 2022 16:36:40 +0800</pubDate><guid>https://askyx.github.io/posts/gfs/</guid><description>GFS是一个大规模可扩展的可容错的分布式文件系统。Google三大篇论文之一 翻译文章在这里 论文在这里 6.824 Q&amp;amp;A GFS的特点 运行在廉价的机器上，节约成本 灵活性强，可随意扩展，容错性强 文件尾部追加数据，不会有太多的数据变动 架构 一个单独的master节点和多个datachunk节点，mast</description></item><item><title>Mapreduce</title><link>https://askyx.github.io/posts/mapreduce/</link><pubDate>Sun, 29 May 2022 21:05:46 +0800</pubDate><guid>https://askyx.github.io/posts/mapreduce/</guid><description>利用普通机器组成的大规模计算集群进行并行的,高容错,高性能的数据处理函数框架 原始论文点这里,论文翻译点这里，有时间的话，自行对比翻译和原文 最终实现的目标是&amp;ndash;实现一个分布式系统，对程序员隐藏底层分布式细节，程序员只需要定义map和reduce 函数即可。 map reduce实现</description></item></channel></rss>