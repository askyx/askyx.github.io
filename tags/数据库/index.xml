<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据库 on Askyx's Blog</title><link>https://askyx.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/</link><description>Recent content in 数据库 on Askyx's Blog</description><generator>Hugo</generator><language>zh-Hans</language><lastBuildDate>Mon, 21 Jul 2025 18:57:57 +0800</lastBuildDate><atom:link href="https://askyx.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/index.xml" rel="self" type="application/rss+xml"/><item><title>note of duckdb</title><link>https://askyx.github.io/posts/books/note4duckdb/</link><pubDate>Sun, 20 Jul 2025 10:40:40 +0800</pubDate><guid>https://askyx.github.io/posts/books/note4duckdb/</guid><description/></item><item><title>note of mysql</title><link>https://askyx.github.io/posts/books/note4mysql/</link><pubDate>Sun, 20 Jul 2025 10:40:40 +0800</pubDate><guid>https://askyx.github.io/posts/books/note4mysql/</guid><description/></item><item><title>源码编译 OpenTenBase 速通版</title><link>https://askyx.github.io/posts/database/tbase/build/</link><pubDate>Fri, 05 Jan 2024 11:07:23 +0800</pubDate><guid>https://askyx.github.io/posts/database/tbase/build/</guid><description>&lt;h2 id="shell">shell&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git clone --depth&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> https://hub.fgit.cf/OpenTenBase/OpenTenBase.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker run -itd --name tbase --cap-add&lt;span style="color:#f92672">=&lt;/span>SYS_PTRACE --privileged&lt;span style="color:#f92672">=&lt;/span>true --hostname vscode --mount type&lt;span style="color:#f92672">=&lt;/span>bind,source&lt;span style="color:#f92672">=&lt;/span>/home/wen/OpenTenBase,target&lt;span style="color:#f92672">=&lt;/span>/workspaces/OpenTenBase runner bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>docker exec -it -u vscode tbase bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo service ssh start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh-keygen
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#ae81ff">700&lt;/span> ~/.ssh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chmod &lt;span style="color:#ae81ff">644&lt;/span> ~/.ssh/authorized_keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo chown vscode:vscode -R /workspaces/OpenTenBase
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p .build/making
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir .data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd .build/making
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/workspaces/OpenTenBase/configure --prefix&lt;span style="color:#f92672">=&lt;/span>/home/vscode/.build --enable-user-switch --with-openssl --with-ossp-uuid --enable-alltype-distri CFLAGS&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-fgnu89-inline -g -O0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make -j64 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make install &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cd contrib &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make -j64 &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make install 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd ~
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir pgxc_ctl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 写入下面的模板&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch pgxc_ctl/pg.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ssh localhost&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pgxc_ctl -c pg.conf init all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>createdb -p &lt;span style="color:#ae81ff">6011&lt;/span> vscode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># .bashrc 文件 此外，/home/vscode/.build/bin 需要写入到 /etc/environment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &amp;gt; /home/vscode/.bashrc &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">export PATH=&amp;#34;$PATH:/home/vscode/.build/bin&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">export LD_LIBRARY_PATH=&amp;#34;$LD_LIBRARY_PATH:/home/vscode/.build/lib&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">export LC_ALL=C
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">alias psql=&amp;#39;psql -p 6011&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">alias pstart=&amp;#39;pgxc_ctl -c pg.conf start all&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">alias pstop=&amp;#39;pgxc_ctl -c pg.conf stop all&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">alias sqps=&amp;#34;echo &amp;#39;USER PID PPID VSZ CMD&amp;#39; ; ps -eo user,pid,ppid,vsize,cmd | grep -E &amp;#39;postgres&amp;#39; &amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="conf-file-pgconf">conf file (pg.conf)&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>pgxcInstallDir&lt;span style="color:#f92672">=&lt;/span>/home/vscode/.build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pgxcOwner&lt;span style="color:#f92672">=&lt;/span>vscode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pgxcUser&lt;span style="color:#f92672">=&lt;/span>$pgxcOwner
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>defaultDatabase&lt;span style="color:#f92672">=&lt;/span>postgres
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tmpDir&lt;span style="color:#f92672">=&lt;/span>/tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localTmpDir&lt;span style="color:#f92672">=&lt;/span>$tmpDir
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#------------------------ GTM ---------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmName&lt;span style="color:#f92672">=&lt;/span>gtm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmMasterServer&lt;span style="color:#f92672">=&lt;/span>vscode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmMasterPort&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">6006&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmMasterDir&lt;span style="color:#f92672">=&lt;/span>/home/vscode/.data/gtm_master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmExtraConfig&lt;span style="color:#f92672">=&lt;/span>none
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmMasterSpecificExtraConfig&lt;span style="color:#f92672">=&lt;/span>none
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>gtmSlave&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#------------------------ Coordinators ---------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordNames&lt;span style="color:#f92672">=(&lt;/span>cn001 cn002&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordMasterCluster&lt;span style="color:#f92672">=(&lt;/span>vscode_cluster vscode_cluster&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordPorts&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#ae81ff">6011&lt;/span> 6012&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>poolerPorts&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#ae81ff">6111&lt;/span> 6112&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordPgHbaEntries&lt;span style="color:#f92672">=(&lt;/span>0.0.0.0/0&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordMasterServers&lt;span style="color:#f92672">=(&lt;/span>vscode vscode&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordMasterDirs&lt;span style="color:#f92672">=(&lt;/span>/home/vscode/.data/cn001 /home/vscode/.data/cn002&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordMaxWALSenders&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span> 10&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordSlave&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordSlaveSync&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordArchLogDirs&lt;span style="color:#f92672">=(&lt;/span>/home/vscode/.data/archlog/cn001 /home/vscode/.data/archlog/cn002&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordExtraConfig&lt;span style="color:#f92672">=&lt;/span>coordExtraConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &amp;gt; $coordExtraConfig &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">#================================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Added to all the coordinator postgresql.conf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Original: $coordExtraConfig
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">include_if_exists = &amp;#39;/home/vscode/.data/global/global_vscode.conf&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_level = replica
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_keep_segments = 256
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">max_wal_senders = 4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">archive_mode = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">archive_timeout = 1800
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">archive_command = &amp;#39;echo 0&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_truncate_on_rotation = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_filename = &amp;#39;postgresql-%M.log&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_rotation_age = 4h
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_rotation_size = 100MB
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">hot_standby = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_sender_timeout = 30min
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_receiver_timeout = 30min
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">shared_buffers = 16384MB
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">max_pool_size = 2000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_statement = &amp;#39;ddl&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_destination = &amp;#39;csvlog&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">logging_collector = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_directory = &amp;#39;pg_log&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">listen_addresses = &amp;#39;*&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">max_connections = 2000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordSpecificExtraConfig&lt;span style="color:#f92672">=(&lt;/span>none none&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordExtraPgHba&lt;span style="color:#f92672">=&lt;/span>coordExtraPgHba
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &amp;gt; $coordExtraPgHba &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">local all all trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host all all 0.0.0.0/0 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host replication all 0.0.0.0/0 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host all all ::1/128 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host replication all ::1/128 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordSpecificExtraPgHba&lt;span style="color:#f92672">=(&lt;/span>none none&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>coordAdditionalSlaves&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cad1_Sync&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#------------------------ Datanodes ---------------------&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>primaryDatanode&lt;span style="color:#f92672">=&lt;/span>dn001
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeNames&lt;span style="color:#f92672">=(&lt;/span>dn001 dn002 dn003&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodePorts&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#ae81ff">6021&lt;/span> &lt;span style="color:#ae81ff">6022&lt;/span> 6023&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodePoolerPorts&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#ae81ff">6121&lt;/span> &lt;span style="color:#ae81ff">6122&lt;/span> 6123&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeMasterCluster&lt;span style="color:#f92672">=(&lt;/span>vscode_cluster vscode_cluster vscode_cluster&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodePgHbaEntries&lt;span style="color:#f92672">=(&lt;/span>0.0.0.0/0&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeMasterServers&lt;span style="color:#f92672">=(&lt;/span>vscode vscode vscode&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeMasterDirs&lt;span style="color:#f92672">=(&lt;/span>/home/vscode/.data/dn001 /home/vscode/.data/dn002 /home/vscode/.data/dn003&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeMaxWALSenders&lt;span style="color:#f92672">=(&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span> 10&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeArchLogDirs&lt;span style="color:#f92672">=(&lt;/span>/home/vscode/.data/archlog/dn001 /home/vscode/.data/archlog/dn002 /home/vscode/.data/archlog/dn003&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeSlave&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeExtraConfig&lt;span style="color:#f92672">=&lt;/span>datanodeExtraConfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &amp;gt; $datanodeExtraConfig &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">#================================================
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Added to all the coordinator postgresql.conf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"># Original: $datanodeExtraConfig
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">include_if_exists = &amp;#39;/home/vscode/.data/global/global_vscode.conf&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">listen_addresses = &amp;#39;*&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_level = replica
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_keep_segments = 256
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">max_wal_senders = 4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">archive_mode = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">archive_timeout = 1800
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">archive_command = &amp;#39;echo 0&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_directory = &amp;#39;pg_log&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">logging_collector = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_truncate_on_rotation = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_filename = &amp;#39;postgresql-%M.log&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_rotation_age = 4h
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_rotation_size = 100MB
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">hot_standby = on
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_sender_timeout = 30min
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_receiver_timeout = 30min
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">shared_buffers = 16384MB
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">max_connections = 4000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">max_pool_size = 4000
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_statement = &amp;#39;ddl&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">log_destination = &amp;#39;csvlog&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">wal_buffers = 1GB
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeSpecificExtraConfig&lt;span style="color:#f92672">=(&lt;/span>none none&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeExtraPgHba&lt;span style="color:#f92672">=&lt;/span>datanodeExtraPgHba
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &amp;gt; $datanodeExtraPgHba &lt;span style="color:#e6db74">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">local all all trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host all all 0.0.0.0/0 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host replication all 0.0.0.0/0 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host all all ::1/128 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">host replication all ::1/128 trust
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeSpecificExtraPgHba&lt;span style="color:#f92672">=(&lt;/span>none none&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>datanodeAdditionalSlaves&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>walArchive&lt;span style="color:#f92672">=&lt;/span>n
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="demo-sql">demo sql&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">drop table if exists t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">drop table if exists t0_2357_hash; drop table if exists t1_2357_hash; drop table if exists t2_2357_hash;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">drop table if exists t0_2357_mod; drop table if exists t1_2357_mod; drop table if exists t2_2357_mod;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">drop table if exists t0_2357_repl; drop table if exists t1_2357_repl; drop table if exists t2_2357_repl;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">drop table if exists t0_2357_round; drop table if exists t1_2357_round; drop table if exists t2_2357_round;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">drop table if exists t0_2357_random; drop table if exists t1_2357_random; drop table if exists t2_2357_random;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> droptable &lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>gset
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t0(a int, b int, c char(10), d timestamp);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t0 values
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">(1, 1, &amp;#39;&amp;#39;1&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2021-12-29 20:10:01&amp;#39;&amp;#39;),(2, 2, &amp;#39;&amp;#39;2&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2022-12-29 20:10:01&amp;#39;&amp;#39;),(3, 3, &amp;#39;&amp;#39;3&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2023-12-29 20:10:01&amp;#39;&amp;#39;),(4, 4, &amp;#39;&amp;#39;4&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2024-12-29 20:10:01&amp;#39;&amp;#39;),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">(5, 5, &amp;#39;&amp;#39;5&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2025-12-29 20:10:01&amp;#39;&amp;#39;),(6, 6, &amp;#39;&amp;#39;6&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2026-12-29 20:10:01&amp;#39;&amp;#39;),(7, 7, &amp;#39;&amp;#39;7&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2027-12-29 20:10:01&amp;#39;&amp;#39;),(8, 8, &amp;#39;&amp;#39;8&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2028-12-29 20:10:01&amp;#39;&amp;#39;),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">(9, 9, &amp;#39;&amp;#39;9&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2029-12-29 20:10:01&amp;#39;&amp;#39;),(10, 10, &amp;#39;&amp;#39;10&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2010-12-29 20:10:01&amp;#39;&amp;#39;),(11, 11, &amp;#39;&amp;#39;11&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2011-12-29 20:10:01&amp;#39;&amp;#39;),(12, 12, &amp;#39;&amp;#39;12&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2012-12-29 20:10:01&amp;#39;&amp;#39;),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">(13, 13, &amp;#39;&amp;#39;13&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2013-12-29 20:10:01&amp;#39;&amp;#39;),(14, 14, &amp;#39;&amp;#39;14&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2014-12-29 20:10:01&amp;#39;&amp;#39;),(15, 15, &amp;#39;&amp;#39;15&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2015-12-29 20:10:01&amp;#39;&amp;#39;),(16, 16, &amp;#39;&amp;#39;16&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2016-12-29 20:10:01&amp;#39;&amp;#39;),
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">(17, 17, &amp;#39;&amp;#39;17&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2017-12-29 20:10:01&amp;#39;&amp;#39;),(18, 18, &amp;#39;&amp;#39;18&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2018-12-29 20:10:01&amp;#39;&amp;#39;),(19, 19, &amp;#39;&amp;#39;19&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2019-12-29 20:10:01&amp;#39;&amp;#39;),(20, 20, &amp;#39;&amp;#39;20&amp;#39;&amp;#39;, &amp;#39;&amp;#39;2020-12-29 20:10:01&amp;#39;&amp;#39;);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t0_2357_hash (a int, b int, c char(10), d timestamp) DISTRIBUTE by hash (a);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t0_2357_mod (a int, b int, c char(10), d timestamp) DISTRIBUTE by modulo(a);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t0_2357_repl (a int, b int, c char(10), d timestamp) DISTRIBUTE by REPLICATION;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t0_2357_round (a int, b int, c char(10), d timestamp) DISTRIBUTE by roundrobin;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t0_2357_random (a int, b int, c char(10), d timestamp) DISTRIBUTED RANDOMLY;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t1_2357_hash (a int, b int, c char(10), d timestamp) DISTRIBUTE by hash (a);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t1_2357_mod (a int, b int, c char(10), d timestamp) DISTRIBUTE by modulo(a);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t1_2357_repl (a int, b int, c char(10), d timestamp) DISTRIBUTE by REPLICATION;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t1_2357_round (a int, b int, c char(10), d timestamp) DISTRIBUTE by roundrobin;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t1_2357_random (a int, b int, c char(10), d timestamp) DISTRIBUTED RANDOMLY;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t2_2357_hash (a int, b int, c char(10), d timestamp) DISTRIBUTE by hash (a);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t2_2357_mod (a int, b int, c char(10), d timestamp) DISTRIBUTE by modulo(a);
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t2_2357_repl (a int, b int, c char(10), d timestamp) DISTRIBUTE by REPLICATION;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t2_2357_round (a int, b int, c char(10), d timestamp) DISTRIBUTE by roundrobin;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">create table t2_2357_random (a int, b int, c char(10), d timestamp) DISTRIBUTED RANDOMLY;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t0_2357_hash select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t0_2357_mod select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t0_2357_repl select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t0_2357_round select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t0_2357_random select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t1_2357_hash select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t1_2357_mod select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t1_2357_repl select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t1_2357_round select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t1_2357_random select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t2_2357_hash select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t2_2357_mod select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t2_2357_repl select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t2_2357_round select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">insert into t2_2357_random select * from t0;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">vacuum analyze t0_2357_hash; vacuum analyze t1_2357_hash; vacuum analyze t2_2357_hash;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">vacuum analyze t0_2357_mod; vacuum analyze t1_2357_mod; vacuum analyze t2_2357_mod;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">vacuum analyze t0_2357_repl; vacuum analyze t1_2357_repl; vacuum analyze t2_2357_repl;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">vacuum analyze t0_2357_round; vacuum analyze t1_2357_round; vacuum analyze t2_2357_round;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">vacuum analyze t0_2357_random; vacuum analyze t1_2357_random; vacuum analyze t2_2357_random;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> createtable &lt;span style="color:#960050;background-color:#1e0010">\&lt;/span>gset
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>postgres Parser</title><link>https://askyx.github.io/posts/postgres/parser/</link><pubDate>Mon, 10 Oct 2022 12:03:18 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/parser/</guid><description>&lt;h2 id="bison">BISON&lt;/h2>
&lt;p>1.2 From Formal Rules to Bison Input&lt;/p>
&lt;ul>
&lt;li>Terminal&lt;/li>
&lt;li>Nonterminal&lt;/li>
&lt;/ul>
&lt;p>1.3 Semantic Values
A formal grammar selects tokens only by their classifications
each token in a Bison grammar has both a token kind and a semantic value
强类型，有类型和值的区别&lt;/p>
&lt;p>1.4 Semantic Actions
The action says how to produce the semantic value&lt;/p>
&lt;p>1.5 Writing GLR Parsers
略，默认是LR文法，但是有RR和SR冲突，所以为了不那么严格限制语法，在一定程度上允许冲突。这里不做了解&lt;/p></description></item><item><title>Locks</title><link>https://askyx.github.io/posts/postgres/locks/</link><pubDate>Wed, 28 Sep 2022 15:42:18 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/locks/</guid><description>&lt;h2 id="spinlock">SpinLock&lt;/h2>
&lt;p>使用tas实现的自旋锁。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c++" data-lang="c++">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (TAS_SPIN(lock))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> perform_spin_delay(&lt;span style="color:#f92672">&amp;amp;&lt;/span>delayStatus);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>perform_spin_delay(SpinDelayStatus &lt;span style="color:#f92672">*&lt;/span>status)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* CPU-specific delay each time through the loop */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SPIN_DELAY();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Block the process every spins_per_delay tries */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">++&lt;/span>(status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>spins) &lt;span style="color:#f92672">&amp;gt;=&lt;/span> spins_per_delay)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#f92672">++&lt;/span>(status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>delays) &lt;span style="color:#f92672">&amp;gt;&lt;/span> NUM_DELAYS)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s_lock_stuck(status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>file, status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>line, status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>func);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>) &lt;span style="color:#75715e">/* first time to delay? */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay &lt;span style="color:#f92672">=&lt;/span> MIN_DELAY_USEC;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_usleep(status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* increase delay by a random fraction between 1X and 2X */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay &lt;span style="color:#f92672">+=&lt;/span> (&lt;span style="color:#66d9ef">int&lt;/span>) (status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pg_prng_double(&lt;span style="color:#f92672">&amp;amp;&lt;/span>pg_global_prng_state) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">0.5&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* wrap back to minimum delay when max is exceeded */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay &lt;span style="color:#f92672">&amp;gt;&lt;/span> MAX_DELAY_USEC)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>cur_delay &lt;span style="color:#f92672">=&lt;/span> MIN_DELAY_USEC;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status&lt;span style="color:#f92672">-&amp;gt;&lt;/span>spins &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果没有tas，则使用信号量实现，属于最底层的锁&lt;/p></description></item><item><title>Postgres Optimizer</title><link>https://askyx.github.io/posts/postgres/opt/</link><pubDate>Fri, 22 Jul 2022 09:24:24 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/opt/</guid><description>&lt;!-- cover: "img/hello.jpg" -->
&lt;h1 id="postgres-optimizer-extend">Postgres Optimizer Extend&lt;/h1>
&lt;p>对文章的技术性验证&lt;/p>
&lt;p>These directories take the Query structure returned by the parser, and
generate a plan used by the executor. The /plan directory generates the
actual output plan, the /path code generates all possible ways to join the
tables, and /prep handles various preprocessing steps for special cases.
/util is utility stuff. /geqo is the separate &amp;ldquo;genetic optimization&amp;rdquo; planner
&amp;mdash; it does a semi-random search through the join tree space, rather than
exhaustively considering all possible join trees. (But each join considered
by /geqo is given to /path to create paths for, so we consider all possible
implementation paths for each specific join pair even in GEQO mode.)&lt;/p></description></item><item><title>Postgres Storage</title><link>https://askyx.github.io/posts/postgres/storage/</link><pubDate>Thu, 21 Jul 2022 09:15:05 +0800</pubDate><guid>https://askyx.github.io/posts/postgres/storage/</guid><description>&lt;h2 id="存储">存储&lt;/h2>
&lt;h3 id="内存">内存&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>共享内存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>本地内存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>缓存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>内存上下文&lt;/p>
&lt;/li>
&lt;li>
&lt;p>缓存空间管理&lt;br>
数据块的缓存，减少磁盘IO，有共享缓存和进程缓存&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Cache&lt;br>
数据块之外的缓存，例如系统表&lt;/p>
&lt;ul>
&lt;li>系统表缓存不会缓存整个表，是以block为单位缓存？&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>虚拟文件描述符&lt;br>
系统中文件有打开的上限，使用VFD可以突破这种限制，本质上是一个LRU缓存&lt;/p></description></item><item><title>数据库文章资源汇总</title><link>https://askyx.github.io/posts/static/note/</link><pubDate>Wed, 20 Jul 2022 17:44:29 +0800</pubDate><guid>https://askyx.github.io/posts/static/note/</guid><description>&lt;h2 id="爬虫">爬虫&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> requests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> bs4 &lt;span style="color:#f92672">import&lt;/span> BeautifulSoup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>prefix &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;http://mysql.taobao.org&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 获取文章名和url（文章名,url）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">query_name_url&lt;/span>(url: str):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resp &lt;span style="color:#f92672">=&lt;/span> requests&lt;span style="color:#f92672">.&lt;/span>get(url)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> soup &lt;span style="color:#f92672">=&lt;/span> BeautifulSoup(resp&lt;span style="color:#f92672">.&lt;/span>content&lt;span style="color:#f92672">.&lt;/span>decode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>), &lt;span style="color:#e6db74">&amp;#34;html.parser&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tags &lt;span style="color:#f92672">=&lt;/span> soup&lt;span style="color:#f92672">.&lt;/span>findAll(&lt;span style="color:#e6db74">&amp;#39;a&amp;#39;&lt;/span>, {&lt;span style="color:#e6db74">&amp;#39;target&amp;#39;&lt;/span>: {&lt;span style="color:#e6db74">&amp;#39;_top&amp;#39;&lt;/span>}})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> urls &lt;span style="color:#f92672">=&lt;/span> [v &lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> tags &lt;span style="color:#66d9ef">if&lt;/span> v[&lt;span style="color:#e6db74">&amp;#39;href&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>find(&lt;span style="color:#e6db74">&amp;#39;/monthly/&amp;#39;&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> [(str(v&lt;span style="color:#f92672">.&lt;/span>string)&lt;span style="color:#f92672">.&lt;/span>strip(), prefix &lt;span style="color:#f92672">+&lt;/span> v[&lt;span style="color:#e6db74">&amp;#39;href&amp;#39;&lt;/span>]) &lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> urls]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 获取所有月报链接（月报名,url）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">query_monthly_url&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resp &lt;span style="color:#f92672">=&lt;/span> requests&lt;span style="color:#f92672">.&lt;/span>get(&lt;span style="color:#e6db74">&amp;#39;http://mysql.taobao.org/monthly/&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> soup &lt;span style="color:#f92672">=&lt;/span> BeautifulSoup(resp&lt;span style="color:#f92672">.&lt;/span>content&lt;span style="color:#f92672">.&lt;/span>decode(&lt;span style="color:#e6db74">&amp;#39;utf-8&amp;#39;&lt;/span>), &lt;span style="color:#e6db74">&amp;#34;html.parser&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tags &lt;span style="color:#f92672">=&lt;/span> soup&lt;span style="color:#f92672">.&lt;/span>findAll(&lt;span style="color:#e6db74">&amp;#39;a&amp;#39;&lt;/span>, {&lt;span style="color:#e6db74">&amp;#39;class&amp;#39;&lt;/span>: {&lt;span style="color:#e6db74">&amp;#39;main&amp;#39;&lt;/span>}})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> urls &lt;span style="color:#f92672">=&lt;/span> [v &lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> tags &lt;span style="color:#66d9ef">if&lt;/span> v[&lt;span style="color:#e6db74">&amp;#39;href&amp;#39;&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>find(&lt;span style="color:#e6db74">&amp;#39;/monthly/&amp;#39;&lt;/span>) &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> [(str(v&lt;span style="color:#f92672">.&lt;/span>string)&lt;span style="color:#f92672">.&lt;/span>strip(), prefix &lt;span style="color:#f92672">+&lt;/span> v[&lt;span style="color:#e6db74">&amp;#39;href&amp;#39;&lt;/span>]) &lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> urls]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 获取所有文章名、URL和对应的月报链接（文章类型，文章名，url，月报名，url）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">query_all_name_url&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> monthly_urls &lt;span style="color:#f92672">=&lt;/span> query_monthly_url()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> data1 &lt;span style="color:#f92672">in&lt;/span> monthly_urls:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name_urls &lt;span style="color:#f92672">=&lt;/span> query_name_url(data1[&lt;span style="color:#ae81ff">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> data2 &lt;span style="color:#f92672">in&lt;/span> name_urls:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result&lt;span style="color:#f92672">.&lt;/span>append((data2[&lt;span style="color:#ae81ff">0&lt;/span>][&lt;span style="color:#ae81ff">0&lt;/span>:data2[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>find(&lt;span style="color:#e6db74">&amp;#39;·&amp;#39;&lt;/span>)]&lt;span style="color:#f92672">.&lt;/span>strip(), data2[&lt;span style="color:#ae81ff">0&lt;/span>], data2[&lt;span style="color:#ae81ff">1&lt;/span>], data1[&lt;span style="color:#ae81ff">0&lt;/span>], data1[&lt;span style="color:#ae81ff">1&lt;/span>]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 下载所有数据库月报，并按照类别进行分类，写入到mysql.md文件中&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>data &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result &lt;span style="color:#f92672">=&lt;/span> query_all_name_url()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result&lt;span style="color:#f92672">.&lt;/span>sort(key&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">lambda&lt;/span> v: v[&lt;span style="color:#ae81ff">0&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> result:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> v[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">!=&lt;/span> name:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> v[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;## &lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(v[&lt;span style="color:#ae81ff">0&lt;/span>]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">&amp;#39;[&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">](&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">) [[&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">](&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">)]&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(v[&lt;span style="color:#ae81ff">1&lt;/span>], v[&lt;span style="color:#ae81ff">2&lt;/span>], v[&lt;span style="color:#ae81ff">3&lt;/span>][v[&lt;span style="color:#ae81ff">3&lt;/span>]&lt;span style="color:#f92672">.&lt;/span>find(&lt;span style="color:#e6db74">&amp;#39; － &amp;#39;&lt;/span>) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>:], v[&lt;span style="color:#ae81ff">4&lt;/span>]))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;mysql.md&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;w&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> file:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> v &lt;span style="color:#f92672">in&lt;/span> data:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(v)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file&lt;span style="color:#f92672">.&lt;/span>write(v &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>15445课程笔记</title><link>https://askyx.github.io/posts/course/15445/note/</link><pubDate>Fri, 10 Jun 2022 11:07:10 +0800</pubDate><guid>https://askyx.github.io/posts/course/15445/note/</guid><description>&lt;p>&lt;a href="https://15445.courses.cs.cmu.edu/fall2021/notes/02-advancedsql.pdf" target="_blank">https://15445.courses.cs.cmu.edu/fall2021/notes/02-advancedsql.pdf&lt;/a>
&lt;/p>
&lt;ul>
&lt;li>output control
控制输出结果，例如order，limit等&lt;/li>
&lt;li>窗口函数&lt;/li>
&lt;li>CTE
Common Table Expressions，把一个语句的输出视为一张临时表参与下面的语句的运算
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">WITH&lt;/span> cte1 (col1) &lt;span style="color:#66d9ef">AS&lt;/span> (&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>), cte2 (col2) &lt;span style="color:#66d9ef">AS&lt;/span> (&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">FROM&lt;/span> cte1, cte2;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="database-storage">Database Storage&lt;/h3>
&lt;ul>
&lt;li>数据库的存储介质当前还是磁盘，IO慢&lt;/li>
&lt;li>数据库存储要点之一是使用缓存维护数据在磁盘和内存之间的数据交换，以实现数据的快速读写&lt;/li>
&lt;li>顺序读写和随机读写
&lt;ol>
&lt;li>顺序读写的意思是需要定位到读写的位置才能操作，例如链表。&lt;/li>
&lt;li>随机读写的意思是可以直接定位到读写的位置，例如数组。&lt;/li>
&lt;li>由于磁盘上随机读写速度不如顺序读写，所以当前数据库还是需要想办法使用顺序读写，例如LSM，GFS等架构都是因为这个原因导致的&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ul>
&lt;h3 id="磁盘和内存中数据的组织格式">磁盘和内存中数据的组织格式&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>数据全部在磁盘上，按page组织数据，内存中使用buffer pool维护缓存，磁盘中有一个page专门维护page的位置信息，使用的时候先读取此page到内存，然后
然后读取其他page到buffer pool，使用buffer pool维护page的置换情况，例如LRU，或者其他算法&lt;br>
可以参考lab1和slide，还是比较明显的&lt;br>
buffer pool中的page可以用于上层的数据运算&lt;/p></description></item></channel></rss>